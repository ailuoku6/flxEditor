{"ast":null,"code":"import getDirection from 'direction';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport React, { createContext, useContext, useRef, useEffect, useLayoutEffect, useState, memo, forwardRef, useCallback, Component, useReducer, useMemo } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { Transforms, Element as Element$1, Editor, Scrubber, Range, Path, Point, Node, Text as Text$1 } from 'slate';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { isHotkey } from 'is-hotkey';\nimport ReactDOM from 'react-dom';\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n/**\r\n * A React context for sharing the editor object.\r\n */\n\nvar EditorContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlateStatic = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useSlateStatic` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\nvar REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10);\nvar IS_IOS = typeof navigator !== 'undefined' && typeof window !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar IS_APPLE = typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent);\nvar IS_ANDROID = typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent);\nvar IS_FIREFOX = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nvar IS_WEBKIT = typeof navigator !== 'undefined' && /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent); // \"modern\" Edge was released at 79.x\n\nvar IS_EDGE_LEGACY = typeof navigator !== 'undefined' && /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent);\nvar IS_CHROME = typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent); // Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\n\nvar IS_CHROME_LEGACY = typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent);\nvar IS_ANDROID_CHROME_LEGACY = IS_ANDROID && typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent); // Firefox did not support `beforeInput` until `v87`.\n\nvar IS_FIREFOX_LEGACY = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(navigator.userAgent); // UC mobile browser\n\nvar IS_UC_MOBILE = typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent); // Wechat browser\n\nvar IS_WECHATBROWSER = typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent); // Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\n\nvar CAN_USE_DOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined'); // COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\n\nvar HAS_BEFORE_INPUT_SUPPORT = (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) && !IS_EDGE_LEGACY &&\n// globalThis is undefined in older browsers\ntypeof globalThis !== 'undefined' && globalThis.InputEvent &&\n// @ts-ignore The `getTargetRanges` property isn't recognized.\ntypeof globalThis.InputEvent.prototype.getTargetRanges === 'function';\n\n/**\r\n * Two weak maps that allow us rebuild a path given a node. They are populated\r\n * at render time such that after a render occurs we can always backtrack.\r\n */\nvar NODE_TO_INDEX = new WeakMap();\nvar NODE_TO_PARENT = new WeakMap();\n/**\r\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\r\n * are used to resolve DOM event-related logic into Slate actions.\r\n */\n\nvar EDITOR_TO_WINDOW = new WeakMap();\nvar EDITOR_TO_ELEMENT = new WeakMap();\nvar EDITOR_TO_PLACEHOLDER_ELEMENT = new WeakMap();\nvar ELEMENT_TO_NODE = new WeakMap();\nvar NODE_TO_ELEMENT = new WeakMap();\nvar NODE_TO_KEY = new WeakMap();\nvar EDITOR_TO_KEY_TO_ELEMENT = new WeakMap();\n/**\r\n * Weak maps for storing editor-related state.\r\n */\n\nvar IS_READ_ONLY = new WeakMap();\nvar IS_FOCUSED = new WeakMap();\nvar IS_COMPOSING = new WeakMap();\nvar EDITOR_TO_USER_SELECTION = new WeakMap();\n/**\r\n * Weak map for associating the context `onChange` context with the plugin.\r\n */\n\nvar EDITOR_TO_ON_CHANGE = new WeakMap();\n/**\r\n * Weak maps for saving pending state on composition stage.\r\n */\n\nvar EDITOR_TO_SCHEDULE_FLUSH = new WeakMap();\nvar EDITOR_TO_PENDING_INSERTION_MARKS = new WeakMap();\nvar EDITOR_TO_USER_MARKS = new WeakMap();\n/**\r\n * Android input handling specific weak-maps\r\n */\n\nvar EDITOR_TO_PENDING_DIFFS = new WeakMap();\nvar EDITOR_TO_PENDING_ACTION = new WeakMap();\nvar EDITOR_TO_PENDING_SELECTION = new WeakMap();\nvar EDITOR_TO_FORCE_RENDER = new WeakMap();\n/**\r\n * Symbols.\r\n */\n\nvar PLACEHOLDER_SYMBOL = Symbol('placeholder');\nvar MARK_PLACEHOLDER_SYMBOL = Symbol('mark-placeholder');\n\n/**\r\n * Types.\r\n */\nvar DOMText = globalThis.Text;\n/**\r\n * Returns the host window of a DOM node\r\n */\n\nvar getDefaultView = value => {\n  return value && value.ownerDocument && value.ownerDocument.defaultView || null;\n};\n/**\r\n * Check if a DOM node is a comment node.\r\n */\n\nvar isDOMComment = value => {\n  return isDOMNode(value) && value.nodeType === 8;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMElement = value => {\n  return isDOMNode(value) && value.nodeType === 1;\n};\n/**\r\n * Check if a value is a DOM node.\r\n */\n\nvar isDOMNode = value => {\n  var window = getDefaultView(value);\n  return !!window && value instanceof window.Node;\n};\n/**\r\n * Check if a value is a DOM selection.\r\n */\n\nvar isDOMSelection = value => {\n  var window = value && value.anchorNode && getDefaultView(value.anchorNode);\n  return !!window && value instanceof window.Selection;\n};\n/**\r\n * Check if a DOM node is an element node.\r\n */\n\nvar isDOMText = value => {\n  return isDOMNode(value) && value.nodeType === 3;\n};\n/**\r\n * Checks whether a paste event is a plaintext-only event.\r\n */\n\nvar isPlainTextOnlyPaste = event => {\n  return event.clipboardData && event.clipboardData.getData('text/plain') !== '' && event.clipboardData.types.length === 1;\n};\n/**\r\n * Normalize a DOM point so that it always refers to a text node.\r\n */\n\nvar normalizeDOMPoint = domPoint => {\n  var [node, offset] = domPoint; // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n\n  if (isDOMElement(node) && node.childNodes.length) {\n    var isLast = offset === node.childNodes.length;\n    var index = isLast ? offset - 1 : offset;\n    [node, index] = getEditableChildAndIndex(node, index, isLast ? 'backward' : 'forward'); // If the editable child found is in front of input offset, we instead seek to its end\n\n    isLast = index < offset; // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n\n    while (isDOMElement(node) && node.childNodes.length) {\n      var i = isLast ? node.childNodes.length - 1 : 0;\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward');\n    } // Determine the new offset inside the text node.\n\n    offset = isLast && node.textContent != null ? node.textContent.length : 0;\n  } // Return the node and offset.\n\n  return [node, offset];\n};\n/**\r\n * Determines whether the active element is nested within a shadowRoot\r\n */\n\nvar hasShadowRoot = node => {\n  var parent = node && node.parentNode;\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true;\n    }\n    parent = parent.parentNode;\n  }\n  return false;\n};\n/**\r\n * Get the nearest editable child and index at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChildAndIndex = (parent, index, direction) => {\n  var {\n    childNodes\n  } = parent;\n  var child = childNodes[index];\n  var i = index;\n  var triedForward = false;\n  var triedBackward = false; // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n\n  while (isDOMComment(child) || isDOMElement(child) && child.childNodes.length === 0 || isDOMElement(child) && child.getAttribute('contenteditable') === 'false') {\n    if (triedForward && triedBackward) {\n      break;\n    }\n    if (i >= childNodes.length) {\n      triedForward = true;\n      i = index - 1;\n      direction = 'backward';\n      continue;\n    }\n    if (i < 0) {\n      triedBackward = true;\n      i = index + 1;\n      direction = 'forward';\n      continue;\n    }\n    child = childNodes[i];\n    index = i;\n    i += direction === 'forward' ? 1 : -1;\n  }\n  return [child, index];\n};\n/**\r\n * Get the nearest editable child at `index` in a `parent`, preferring\r\n * `direction`.\r\n */\n\nvar getEditableChild = (parent, index, direction) => {\n  var [child] = getEditableChildAndIndex(parent, index, direction);\n  return child;\n};\n/**\r\n * Get a plaintext representation of the content of a node, accounting for block\r\n * elements which get a newline appended.\r\n *\r\n * The domNode must be attached to the DOM.\r\n */\n\nvar getPlainText = domNode => {\n  var text = '';\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue;\n  }\n  if (isDOMElement(domNode)) {\n    for (var childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode);\n    }\n    var display = getComputedStyle(domNode).getPropertyValue('display');\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n';\n    }\n  }\n  return text;\n};\n/**\r\n * Get x-slate-fragment attribute from data-slate-fragment\r\n */\n\nvar catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m;\nvar getSlateFragmentAttribute = dataTransfer => {\n  var htmlData = dataTransfer.getData('text/html');\n  var [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\n/**\r\n * Check whether a mutation originates from a editable element inside the editor.\r\n */\n\nvar isTrackedMutation = (editor, mutation, batch) => {\n  var {\n    target\n  } = mutation;\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false;\n  }\n  var {\n    document\n  } = ReactEditor.getWindow(editor);\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, {\n      editable: true\n    });\n  }\n  var parentMutation = batch.find(_ref => {\n    var {\n      addedNodes,\n      removedNodes\n    } = _ref;\n    for (var node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true;\n      }\n    }\n    for (var _node of removedNodes) {\n      if (_node === target || _node.contains(target)) {\n        return true;\n      }\n    }\n  });\n  if (!parentMutation || parentMutation === mutation) {\n    return false;\n  } // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n\n  return isTrackedMutation(editor, parentMutation, batch);\n};\n\n/**\r\n * An auto-incrementing identifier for keys.\r\n */\nvar n = 0;\n/**\r\n * A class that keeps track of a key string. We use a full class here because we\r\n * want to be able to use them as keys in `WeakMap` objects.\r\n */\n\nclass Key {\n  constructor() {\n    this.id = \"\".concat(n++);\n  }\n}\nvar ReactEditor = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n  androidScheduleFlush: editor => {\n    var _EDITOR_TO_SCHEDULE_F;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(editor)) === null || _EDITOR_TO_SCHEDULE_F === void 0 ? void 0 : _EDITOR_TO_SCHEDULE_F();\n  },\n  blur: editor => {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, false);\n    if (root.activeElement === el) {\n      el.blur();\n    }\n  },\n  deselect: editor => {\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges();\n    }\n    if (selection) {\n      Transforms.deselect(editor);\n    }\n  },\n  findDocumentOrShadowRoot: editor => {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = el.getRootNode();\n    if ((root instanceof Document || root instanceof ShadowRoot) && root.getSelection != null) {\n      return root;\n    }\n    return el.ownerDocument;\n  },\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent;\n    }\n    var {\n      clientX: x,\n      clientY: y,\n      target\n    } = event;\n    if (x == null || y == null) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    }\n    var node = ReactEditor.toSlateNode(editor, event.target);\n    var path = ReactEditor.findPath(editor, node); // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n\n    if (Element$1.isElement(node) && Editor.isVoid(editor, node)) {\n      var rect = target.getBoundingClientRect();\n      var isPrev = editor.isInline(node) ? x - rect.left < rect.left + rect.width - x : y - rect.top < rect.top + rect.height - y;\n      var edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end'\n      });\n      var point = isPrev ? Editor.before(editor, edge) : Editor.after(editor, edge);\n      if (point) {\n        var _range = Editor.range(editor, point);\n        return _range;\n      }\n    } // Else resolve a range from the caret position where the drop occured.\n\n    var domRange;\n    var {\n      document\n    } = ReactEditor.getWindow(editor); // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y);\n    } else {\n      var position = document.caretPositionFromPoint(x, y);\n      if (position) {\n        domRange = document.createRange();\n        domRange.setStart(position.offsetNode, position.offset);\n        domRange.setEnd(position.offsetNode, position.offset);\n      }\n    }\n    if (!domRange) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    } // Resolve a Slate range from the DOM range.\n\n    var range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false\n    });\n    return range;\n  },\n  findKey: (editor, node) => {\n    var key = NODE_TO_KEY.get(node);\n    if (!key) {\n      key = new Key();\n      NODE_TO_KEY.set(node, key);\n    }\n    return key;\n  },\n  findPath: (editor, node) => {\n    var path = [];\n    var child = node;\n    while (true) {\n      var parent = NODE_TO_PARENT.get(child);\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path;\n        } else {\n          break;\n        }\n      }\n      var i = NODE_TO_INDEX.get(child);\n      if (i == null) {\n        break;\n      }\n      path.unshift(i);\n      child = parent;\n    }\n    throw new Error(\"Unable to find the path for Slate node: \".concat(Scrubber.stringify(node)));\n  },\n  focus: editor => {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, true);\n    if (root.activeElement !== el) {\n      el.focus({\n        preventScroll: true\n      });\n    }\n  },\n  getWindow: editor => {\n    var window = EDITOR_TO_WINDOW.get(editor);\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor');\n    }\n    return window;\n  },\n  hasDOMNode: function hasDOMNode(editor, target) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var {\n      editable = false\n    } = options;\n    var editorEl = ReactEditor.toDOMNode(editor, editor);\n    var targetEl; // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n\n    try {\n      targetEl = isDOMElement(target) ? target : target.parentElement;\n    } catch (err) {\n      if (!err.message.includes('Permission denied to access property \"nodeType\"')) {\n        throw err;\n      }\n    }\n    if (!targetEl) {\n      return false;\n    }\n    return targetEl.closest(\"[data-slate-editor]\") === editorEl && (!editable || targetEl.isContentEditable ? true : typeof targetEl.isContentEditable === 'boolean' &&\n    // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n    // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n    targetEl.closest('[contenteditable=\"false\"]') === editorEl || !!targetEl.getAttribute('data-slate-zero-width'));\n  },\n  hasEditableTarget: (editor, target) => isDOMNode(target) && ReactEditor.hasDOMNode(editor, target, {\n    editable: true\n  }),\n  hasRange: (editor, range) => {\n    var {\n      anchor,\n      focus\n    } = range;\n    return Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path);\n  },\n  hasSelectableTarget: (editor, target) => ReactEditor.hasEditableTarget(editor, target) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, target),\n  hasTarget: (editor, target) => isDOMNode(target) && ReactEditor.hasDOMNode(editor, target),\n  insertData: (editor, data) => {\n    editor.insertData(data);\n  },\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n  insertTextData: (editor, data) => editor.insertTextData(data),\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor);\n  },\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false;\n    var slateNode = ReactEditor.hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target);\n    return Element$1.isElement(slateNode) && Editor.isVoid(editor, slateNode);\n  },\n  setFragmentData: (editor, data, originEvent) => editor.setFragmentData(data, originEvent),\n  toDOMNode: (editor, node) => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    var domNode = Editor.isEditor(node) ? EDITOR_TO_ELEMENT.get(editor) : KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node));\n    if (!domNode) {\n      throw new Error(\"Cannot resolve a DOM node from Slate node: \".concat(Scrubber.stringify(node)));\n    }\n    return domNode;\n  },\n  toDOMPoint: (editor, point) => {\n    var [node] = Editor.node(editor, point.path);\n    var el = ReactEditor.toDOMNode(editor, node);\n    var domPoint; // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n\n    if (Editor.void(editor, {\n      at: point\n    })) {\n      point = {\n        path: point.path,\n        offset: 0\n      };\n    } // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n\n    var selector = \"[data-slate-string], [data-slate-zero-width]\";\n    var texts = Array.from(el.querySelectorAll(selector));\n    var start = 0;\n    for (var i = 0; i < texts.length; i++) {\n      var text = texts[i];\n      var domNode = text.childNodes[0];\n      if (domNode == null || domNode.textContent == null) {\n        continue;\n      }\n      var {\n        length\n      } = domNode.textContent;\n      var attr = text.getAttribute('data-slate-length');\n      var trueLength = attr == null ? length : parseInt(attr, 10);\n      var end = start + trueLength; // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n\n      var nextText = texts[i + 1];\n      if (point.offset === end && nextText !== null && nextText !== void 0 && nextText.hasAttribute('data-slate-mark-placeholder')) {\n        var _nextText$textContent;\n        var domText = nextText.childNodes[0];\n        domPoint = [\n        // COMPAT: If we don't explicity set the dom point to be on the actual\n        // dom text element, chrome will put the selection behind the actual dom\n        // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n        // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n        // which will cause issues when scrolling to it.\n        domText instanceof DOMText ? domText : nextText, (_nextText$textContent = nextText.textContent) !== null && _nextText$textContent !== void 0 && _nextText$textContent.startsWith('\\uFEFF') ? 1 : 0];\n        break;\n      }\n      if (point.offset <= end) {\n        var offset = Math.min(length, Math.max(0, point.offset - start));\n        domPoint = [domNode, offset];\n        break;\n      }\n      start = end;\n    }\n    if (!domPoint) {\n      throw new Error(\"Cannot resolve a DOM point from Slate point: \".concat(Scrubber.stringify(point)));\n    }\n    return domPoint;\n  },\n  toDOMRange: (editor, range) => {\n    var {\n      anchor,\n      focus\n    } = range;\n    var isBackward = Range.isBackward(range);\n    var domAnchor = ReactEditor.toDOMPoint(editor, anchor);\n    var domFocus = Range.isCollapsed(range) ? domAnchor : ReactEditor.toDOMPoint(editor, focus);\n    var window = ReactEditor.getWindow(editor);\n    var domRange = window.document.createRange();\n    var [startNode, startOffset] = isBackward ? domFocus : domAnchor;\n    var [endNode, endOffset] = isBackward ? domAnchor : domFocus; // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n\n    var startEl = isDOMElement(startNode) ? startNode : startNode.parentElement;\n    var isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width');\n    var endEl = isDOMElement(endNode) ? endNode : endNode.parentElement;\n    var isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width');\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset);\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset);\n    return domRange;\n  },\n  toSlateNode: (editor, domNode) => {\n    var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(\"[data-slate-node]\");\n    }\n    var node = domEl ? ELEMENT_TO_NODE.get(domEl) : null;\n    if (!node) {\n      throw new Error(\"Cannot resolve a Slate node from DOM node: \".concat(domEl));\n    }\n    return node;\n  },\n  toSlatePoint: (editor, domPoint, options) => {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var [nearestNode, nearestOffset] = exactMatch ? domPoint : normalizeDOMPoint(domPoint);\n    var parentNode = nearestNode.parentNode;\n    var textNode = null;\n    var offset = 0;\n    if (parentNode) {\n      var _domNode$textContent, _domNode$textContent2;\n      var editorEl = ReactEditor.toDOMNode(editor, editor);\n      var potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]'); // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n\n      var voidNode = potentialVoidNode && editorEl.contains(potentialVoidNode) ? potentialVoidNode : null;\n      var leafNode = parentNode.closest('[data-slate-leaf]');\n      var domNode = null; // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]');\n        if (textNode) {\n          var window = ReactEditor.getWindow(editor);\n          var range = window.document.createRange();\n          range.setStart(textNode, 0);\n          range.setEnd(nearestNode, nearestOffset);\n          var contents = range.cloneContents();\n          var removals = [...Array.prototype.slice.call(contents.querySelectorAll('[data-slate-zero-width]')), ...Array.prototype.slice.call(contents.querySelectorAll('[contenteditable=false]'))];\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (IS_ANDROID && !exactMatch && el.hasAttribute('data-slate-zero-width') && el.textContent.length > 0 && el.textContext !== '\\uFEFF') {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1);\n              }\n              return;\n            }\n            el.parentNode.removeChild(el);\n          }); // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n\n          offset = contents.textContent.length;\n          domNode = textNode;\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        var leafNodes = voidNode.querySelectorAll('[data-slate-leaf]');\n        for (var index = 0; index < leafNodes.length; index++) {\n          var current = leafNodes[index];\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current;\n            break;\n          }\n        } // COMPAT: In read-only editors the leaf is not rendered.\n\n        if (!leafNode) {\n          offset = 1;\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]');\n          domNode = leafNode;\n          offset = domNode.textContent.length;\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent.length;\n          });\n        }\n      }\n      if (domNode && offset === domNode.textContent.length &&\n      // COMPAT: Android IMEs might remove the zero width space while composing,\n      // and we don't add it for line-breaks.\n      IS_ANDROID && domNode.getAttribute('data-slate-zero-width') === 'z' && (_domNode$textContent = domNode.textContent) !== null && _domNode$textContent !== void 0 && _domNode$textContent.startsWith('\\uFEFF') && (parentNode.hasAttribute('data-slate-zero-width') || IS_FIREFOX && (_domNode$textContent2 = domNode.textContent) !== null && _domNode$textContent2 !== void 0 && _domNode$textContent2.endsWith('\\n\\n'))) {\n        offset--;\n      }\n    }\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      var node = parentNode.hasAttribute('data-slate-node') ? parentNode : parentNode.closest('[data-slate-node]');\n      if (node && ReactEditor.hasDOMNode(editor, node, {\n        editable: true\n      })) {\n        var _slateNode = ReactEditor.toSlateNode(editor, node);\n        var {\n          path: _path,\n          offset: _offset\n        } = Editor.start(editor, ReactEditor.findPath(editor, _slateNode));\n        if (!node.querySelector('[data-slate-leaf]')) {\n          _offset = nearestOffset;\n        }\n        return {\n          path: _path,\n          offset: _offset\n        };\n      }\n    }\n    if (!textNode) {\n      if (suppressThrow) {\n        return null;\n      }\n      throw new Error(\"Cannot resolve a Slate point from DOM point: \".concat(domPoint));\n    } // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n\n    var slateNode = ReactEditor.toSlateNode(editor, textNode);\n    var path = ReactEditor.findPath(editor, slateNode);\n    return {\n      path,\n      offset\n    };\n  },\n  toSlateRange: (editor, domRange, options) => {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var el = isDOMSelection(domRange) ? domRange.anchorNode : domRange.startContainer;\n    var anchorNode;\n    var anchorOffset;\n    var focusNode;\n    var focusOffset;\n    var isCollapsed;\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode;\n        anchorOffset = domRange.anchorOffset;\n        focusNode = domRange.focusNode;\n        focusOffset = domRange.focusOffset; // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n\n        if (IS_CHROME && hasShadowRoot(anchorNode)) {\n          isCollapsed = domRange.anchorNode === domRange.focusNode && domRange.anchorOffset === domRange.focusOffset;\n        } else {\n          isCollapsed = domRange.isCollapsed;\n        }\n      } else {\n        anchorNode = domRange.startContainer;\n        anchorOffset = domRange.startOffset;\n        focusNode = domRange.endContainer;\n        focusOffset = domRange.endOffset;\n        isCollapsed = domRange.collapsed;\n      }\n    }\n    if (anchorNode == null || focusNode == null || anchorOffset == null || focusOffset == null) {\n      throw new Error(\"Cannot resolve a Slate range from DOM range: \".concat(domRange));\n    } // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n\n    if ('getAttribute' in focusNode && focusNode.getAttribute('contenteditable') === 'false' && focusNode.getAttribute('data-slate-void') !== 'true') {\n      var _anchorNode$textConte;\n      focusNode = anchorNode;\n      focusOffset = ((_anchorNode$textConte = anchorNode.textContent) === null || _anchorNode$textConte === void 0 ? void 0 : _anchorNode$textConte.length) || 0;\n    }\n    var anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!anchor) {\n      return null;\n    }\n    var focus = isCollapsed ? anchor : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!focus) {\n      return null;\n    }\n    /**\r\n     * suppose we have this document:\r\n     *\r\n     * { type: 'paragraph',\r\n     *   children: [\r\n     *     { text: 'foo ' },\r\n     *     { text: 'bar' },\r\n     *     { text: ' baz' }\r\n     *   ]\r\n     * }\r\n     *\r\n     * a double click on \"bar\" on chrome will create this range:\r\n     *\r\n     * anchor -> [0,1] offset 0\r\n     * focus  -> [0,1] offset 3\r\n     *\r\n     * while on firefox will create this range:\r\n     *\r\n     * anchor -> [0,0] offset 4\r\n     * focus  -> [0,2] offset 0\r\n     *\r\n     * let's try to fix it...\r\n     */\n\n    if (IS_FIREFOX && !isCollapsed && anchorNode !== focusNode) {\n      var isEnd = Editor.isEnd(editor, anchor, anchor.path);\n      var isStart = Editor.isStart(editor, focus, focus.path);\n      if (isEnd) {\n        var after = Editor.after(editor, anchor); // Editor.after() might return undefined\n\n        anchor = after || anchor;\n      }\n      if (isStart) {\n        var before = Editor.before(editor, focus);\n        focus = before || focus;\n      }\n    }\n    var range = {\n      anchor: anchor,\n      focus: focus\n    }; // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n\n    if (Range.isExpanded(range) && Range.isForward(range) && isDOMElement(focusNode) && Editor.void(editor, {\n      at: range.focus,\n      mode: 'highest'\n    })) {\n      range = Editor.unhangRange(editor, range, {\n        voids: true\n      });\n    }\n    return range;\n  }\n};\n\n/**\r\n * Check whether a text diff was applied in a way we can perform the pending action on /\r\n * recover the pending selection.\r\n */\n\nfunction verifyDiffState(editor, textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  if (!Editor.hasPath(editor, path)) {\n    return false;\n  }\n  var node = Node.get(editor, path);\n  if (!Text$1.isText(node)) {\n    return false;\n  }\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return node.text.slice(diff.start, diff.start + diff.text.length) === diff.text;\n  }\n  var nextPath = Path.next(path);\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false;\n  }\n  var nextNode = Node.get(editor, nextPath);\n  return Text$1.isText(nextNode) && nextNode.text.startsWith(diff.text);\n}\nfunction applyStringDiff(text) {\n  for (var _len = arguments.length, diffs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    diffs[_key - 1] = arguments[_key];\n  }\n  return diffs.reduce((text, diff) => text.slice(0, diff.start) + diff.text + text.slice(diff.end), text);\n}\nfunction longestCommonPrefixLength(str, another) {\n  var length = Math.min(str.length, another.length);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i;\n    }\n  }\n  return length;\n}\nfunction longestCommonSuffixLength(str, another, max) {\n  var length = Math.min(str.length, another.length, max);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)) {\n      return i;\n    }\n  }\n  return length;\n}\n/**\r\n * Remove redundant changes from the diff so that it spans the minimal possible range\r\n */\n\nfunction normalizeStringDiff(targetText, diff) {\n  var {\n    start,\n    end,\n    text\n  } = diff;\n  var removedText = targetText.slice(start, end);\n  var prefixLength = longestCommonPrefixLength(removedText, text);\n  var max = Math.min(removedText.length - prefixLength, text.length - prefixLength);\n  var suffixLength = longestCommonSuffixLength(removedText, text, max);\n  var normalized = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength)\n  };\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null;\n  }\n  return normalized;\n}\n/**\r\n * Return a string diff that is equivalent to applying b after a spanning the range of\r\n * both changes\r\n */\n\nfunction mergeStringDiffs(targetText, a, b) {\n  var start = Math.min(a.start, b.start);\n  var overlap = Math.max(0, Math.min(a.start + a.text.length, b.end) - b.start);\n  var applied = applyStringDiff(targetText, a, b);\n  var sliceEnd = Math.max(b.start + b.text.length, a.start + a.text.length + (a.start + a.text.length > b.start ? b.text.length : 0) - overlap);\n  var text = applied.slice(start, sliceEnd);\n  var end = Math.max(a.end, b.end - a.text.length + (a.end - a.start));\n  return normalizeStringDiff(targetText, {\n    start,\n    end,\n    text\n  });\n}\n/**\r\n * Get the slate range the text diff spans.\r\n */\n\nfunction targetRange(textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  return {\n    anchor: {\n      path,\n      offset: diff.start\n    },\n    focus: {\n      path,\n      offset: diff.end\n    }\n  };\n}\n/**\r\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\r\n * the pending diffs. Since the pending diffs might have been inserted with different\r\n * marks we have to 'walk' the offset from the starting position to ensure we still\r\n * have a valid point inside the document\r\n */\n\nfunction normalizePoint(editor, point) {\n  var {\n    path,\n    offset\n  } = point;\n  if (!Editor.hasPath(editor, path)) {\n    return null;\n  }\n  var leaf = Node.get(editor, path);\n  if (!Text$1.isText(leaf)) {\n    return null;\n  }\n  var parentBlock = Editor.above(editor, {\n    match: n => Element$1.isElement(n) && Editor.isBlock(editor, n),\n    at: path\n  });\n  if (!parentBlock) {\n    return null;\n  }\n  while (offset > leaf.text.length) {\n    var entry = Editor.next(editor, {\n      at: path,\n      match: Text$1.isText\n    });\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null;\n    }\n    offset -= leaf.text.length;\n    leaf = entry[0];\n    path = entry[1];\n  }\n  return {\n    path,\n    offset\n  };\n}\n/**\r\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\r\n */\n\nfunction normalizeRange(editor, range) {\n  var anchor = normalizePoint(editor, range.anchor);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = normalizePoint(editor, range.focus);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformPendingPoint(editor, point, op) {\n  var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor);\n  var textDiff = pendingDiffs === null || pendingDiffs === void 0 ? void 0 : pendingDiffs.find(_ref => {\n    var {\n      path\n    } = _ref;\n    return Path.equals(path, point.path);\n  });\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, {\n      affinity: 'backward'\n    });\n  }\n  var {\n    diff\n  } = textDiff; // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n\n  if (point.offset <= diff.start + diff.text.length) {\n    var _anchor = {\n      path: point.path,\n      offset: diff.start\n    };\n    var _transformed = Point.transform(_anchor, op, {\n      affinity: 'backward'\n    });\n    if (!_transformed) {\n      return null;\n    }\n    return {\n      path: _transformed.path,\n      offset: _transformed.offset + point.offset - diff.start\n    };\n  } // Point references location after the diff\n\n  var anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start\n  };\n  var transformed = Point.transform(anchor, op, {\n    affinity: 'backward'\n  });\n  if (!transformed) {\n    return null;\n  }\n  if (op.type === 'split_node' && Path.equals(op.path, point.path) && anchor.offset < op.position && diff.start < op.position) {\n    return transformed;\n  }\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start\n  };\n}\nfunction transformPendingRange(editor, range, op) {\n  var anchor = transformPendingPoint(editor, range.anchor, op);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = transformPendingPoint(editor, range.focus, op);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformTextDiff(textDiff, op) {\n  var {\n    path,\n    diff,\n    id\n  } = textDiff;\n  switch (op.type) {\n    case 'insert_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset <= diff.start) {\n          return {\n            diff: {\n              start: op.text.length + diff.start,\n              end: op.text.length + diff.end,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end + op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'remove_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset + op.text.length <= diff.start) {\n          return {\n            diff: {\n              start: diff.start - op.text.length,\n              end: diff.end - op.text.length,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end - op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'split_node':\n      {\n        if (!Path.equals(op.path, path) || op.position >= diff.end) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op, {\n              affinity: 'backward'\n            })\n          };\n        }\n        if (op.position > diff.start) {\n          return {\n            diff: {\n              start: diff.start,\n              end: Math.min(op.position, diff.end),\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start - op.position,\n            end: diff.end - op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op, {\n            affinity: 'forward'\n          })\n        };\n      }\n    case 'merge_node':\n      {\n        if (!Path.equals(op.path, path)) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op)\n          };\n        }\n        return {\n          diff: {\n            start: diff.start + op.position,\n            end: diff.end + op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op)\n        };\n      }\n  }\n  var newPath = Path.transform(path, op);\n  if (!newPath) {\n    return null;\n  }\n  return {\n    diff,\n    path: newPath,\n    id\n  };\n}\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$3(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$3(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\n\nvar RESOLVE_DELAY = 25; // Time with no user interaction before the current user action is considered as done.\n\nvar FLUSH_DELAY = 200; // Replace with `const debug = console.log` to debug\n\nvar debug = function debug() {}; // Type guard to check if a value is a DataTransfer\n\nvar isDataTransfer = value => (value === null || value === void 0 ? void 0 : value.constructor.name) === 'DataTransfer';\nfunction createAndroidInputManager(_ref) {\n  var {\n    editor,\n    scheduleOnDOMSelectionChange,\n    onDOMSelectionChange\n  } = _ref;\n  var flushing = false;\n  var compositionEndTimeoutId = null;\n  var flushTimeoutId = null;\n  var actionTimeoutId = null;\n  var idCounter = 0;\n  var insertPositionHint = false;\n  var applyPendingSelection = () => {\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor);\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    if (pendingSelection) {\n      var {\n        selection\n      } = editor;\n      var normalized = normalizeRange(editor, pendingSelection);\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized);\n      }\n    }\n  };\n  var performAction = () => {\n    var action = EDITOR_TO_PENDING_ACTION.get(editor);\n    EDITOR_TO_PENDING_ACTION.delete(editor);\n    if (!action) {\n      return;\n    }\n    if (action.at) {\n      var target = Point.isPoint(action.at) ? normalizePoint(editor, action.at) : normalizeRange(editor, action.at);\n      if (!target) {\n        return;\n      }\n      var _targetRange = Editor.range(editor, target);\n      if (!editor.selection || !Range.equals(editor.selection, _targetRange)) {\n        Transforms.select(editor, target);\n      }\n    }\n    action.run();\n  };\n  var flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId);\n      actionTimeoutId = null;\n    }\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection();\n      return;\n    }\n    if (!flushing) {\n      flushing = true;\n      setTimeout(() => flushing = false);\n    }\n    if (hasPendingAction()) {\n      flushing = 'action';\n    }\n    var selectionRef = editor.selection && Editor.rangeRef(editor, editor.selection, {\n      affinity: 'forward'\n    });\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n    debug('flush', EDITOR_TO_PENDING_ACTION.get(editor), EDITOR_TO_PENDING_DIFFS.get(editor));\n    var scheduleSelectionChange = hasPendingDiffs();\n    var diff;\n    while (diff = (_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI === void 0 ? void 0 : _EDITOR_TO_PENDING_DI[0]) {\n      var _EDITOR_TO_PENDING_DI, _EDITOR_TO_PENDING_DI2;\n      var pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n        editor.marks = pendingMarks;\n      }\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null;\n      }\n      var range = targetRange(diff);\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range);\n      }\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text);\n      } else {\n        Editor.deleteFragment(editor);\n      } // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n\n      EDITOR_TO_PENDING_DIFFS.set(editor, (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI2 === void 0 ? void 0 : _EDITOR_TO_PENDING_DI2.filter(_ref2 => {\n        var {\n          id\n        } = _ref2;\n        return id !== diff.id;\n      }));\n      if (!verifyDiffState(editor, diff)) {\n        scheduleSelectionChange = false;\n        EDITOR_TO_PENDING_ACTION.delete(editor);\n        EDITOR_TO_USER_MARKS.delete(editor);\n        flushing = 'action'; // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n\n        EDITOR_TO_PENDING_SELECTION.delete(editor);\n        scheduleOnDOMSelectionChange.cancel();\n        onDOMSelectionChange.cancel();\n        selectionRef === null || selectionRef === void 0 ? void 0 : selectionRef.unref();\n      }\n    }\n    var selection = selectionRef === null || selectionRef === void 0 ? void 0 : selectionRef.unref();\n    if (selection && !EDITOR_TO_PENDING_SELECTION.get(editor) && (!editor.selection || !Range.equals(selection, editor.selection))) {\n      Transforms.select(editor, selection);\n    }\n    if (hasPendingAction()) {\n      performAction();\n      return;\n    } // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n\n    if (scheduleSelectionChange) {\n      scheduleOnDOMSelectionChange();\n    }\n    scheduleOnDOMSelectionChange.flush();\n    onDOMSelectionChange.flush();\n    applyPendingSelection();\n    var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n    EDITOR_TO_USER_MARKS.delete(editor);\n    if (userMarks !== undefined) {\n      editor.marks = userMarks;\n      editor.onChange();\n    }\n  };\n  var handleCompositionEnd = _event => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n    }\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false);\n      flush();\n    }, RESOLVE_DELAY);\n  };\n  var handleCompositionStart = _event => {\n    IS_COMPOSING.set(editor, true);\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n      compositionEndTimeoutId = null;\n    }\n  };\n  var updatePlaceholderVisibility = function updatePlaceholderVisibility() {\n    var forceHide = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor);\n    if (!placeholderElement) {\n      return;\n    }\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none';\n      return;\n    }\n    placeholderElement.style.removeProperty('display');\n  };\n  var storeDiff = (path, diff) => {\n    var _EDITOR_TO_PENDING_DI3;\n    var pendingDiffs = (_EDITOR_TO_PENDING_DI3 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI3 !== void 0 ? _EDITOR_TO_PENDING_DI3 : [];\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs);\n    var target = Node.leaf(editor, path);\n    var idx = pendingDiffs.findIndex(change => Path.equals(change.path, path));\n    if (idx < 0) {\n      var normalized = normalizeStringDiff(target.text, diff);\n      if (normalized) {\n        pendingDiffs.push({\n          path,\n          diff,\n          id: idCounter++\n        });\n      }\n      updatePlaceholderVisibility();\n      return;\n    }\n    var merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff);\n    if (!merged) {\n      pendingDiffs.splice(idx, 1);\n      updatePlaceholderVisibility();\n      return;\n    }\n    pendingDiffs[idx] = _objectSpread$3(_objectSpread$3({}, pendingDiffs[idx]), {}, {\n      diff: merged\n    });\n  };\n  var scheduleAction = function scheduleAction(run) {\n    var {\n      at\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    insertPositionHint = false;\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    scheduleOnDOMSelectionChange.cancel();\n    onDOMSelectionChange.cancel();\n    if (hasPendingAction()) {\n      flush();\n    }\n    EDITOR_TO_PENDING_ACTION.set(editor, {\n      at,\n      run\n    }); // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n\n    actionTimeoutId = setTimeout(flush);\n  };\n  var handleDOMBeforeInput = event => {\n    var _targetRange2;\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      inputType: type\n    } = event;\n    var targetRange = null;\n    var data = event.dataTransfer || event.data || undefined;\n    if (insertPositionHint !== false && type !== 'insertText' && type !== 'insertCompositionText') {\n      insertPositionHint = false;\n    }\n    var [nativeTargetRange] = event.getTargetRanges();\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    } // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n\n    var window = ReactEditor.getWindow(editor);\n    var domSelection = window.getSelection();\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection;\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    }\n    targetRange = (_targetRange2 = targetRange) !== null && _targetRange2 !== void 0 ? _targetRange2 : editor.selection;\n    if (!targetRange) {\n      return;\n    } // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n\n    var canStoreDiff = true;\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        var [_start, _end] = Range.edges(targetRange);\n        var _leaf = Node.leaf(editor, _start.path);\n        if (_leaf.text.length === _start.offset && _end.offset === 0) {\n          var next = Editor.next(editor, {\n            at: _start.path,\n            match: Text$1.isText\n          });\n          if (next && Path.equals(next[1], _end.path)) {\n            targetRange = {\n              anchor: _end,\n              focus: _end\n            };\n          }\n        }\n      }\n      var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n      var [start, end] = Range.edges(targetRange);\n      var [leaf, path] = Editor.leaf(editor, start.path);\n      var diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset\n      };\n      var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor);\n      var relevantPendingDiffs = pendingDiffs === null || pendingDiffs === void 0 ? void 0 : pendingDiffs.find(change => Path.equals(change.path, path));\n      var diffs = relevantPendingDiffs ? [relevantPendingDiffs.diff, diff] : [diff];\n      var text = applyStringDiff(leaf.text, ...diffs);\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false;\n      }\n      if (Range.isExpanded(targetRange)) {\n        if (canStoreDiff && Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          var point = {\n            path: targetRange.anchor.path,\n            offset: start.offset\n          };\n          var range = Editor.range(editor, point, point);\n          handleUserSelect(range);\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset\n          });\n        }\n        return scheduleAction(() => Editor.deleteFragment(editor, {\n          direction\n        }), {\n          at: targetRange\n        });\n      }\n    }\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag':\n        {\n          return scheduleAction(() => Editor.deleteFragment(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContent':\n      case 'deleteContentForward':\n        {\n          var {\n            anchor\n          } = targetRange;\n          if (canStoreDiff && Range.isCollapsed(targetRange)) {\n            var targetNode = Node.leaf(editor, anchor.path);\n            if (anchor.offset < targetNode.text.length) {\n              return storeDiff(anchor.path, {\n                text: '',\n                start: anchor.offset,\n                end: anchor.offset + 1\n              });\n            }\n          }\n          return scheduleAction(() => Editor.deleteForward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContentBackward':\n        {\n          var _nativeTargetRange;\n          var {\n            anchor: _anchor\n          } = targetRange; // If we have a mismatch between the native and slate selection being collapsed\n          // we are most likely deleting a zero-width placeholder and thus should perform it\n          // as an action to ensure correct behavior (mostly happens with mark placeholders)\n\n          var nativeCollapsed = isDOMSelection(nativeTargetRange) ? nativeTargetRange.isCollapsed : !!((_nativeTargetRange = nativeTargetRange) !== null && _nativeTargetRange !== void 0 && _nativeTargetRange.collapsed);\n          if (canStoreDiff && nativeCollapsed && Range.isCollapsed(targetRange) && _anchor.offset > 0) {\n            return storeDiff(_anchor.path, {\n              text: '',\n              start: _anchor.offset - 1,\n              end: _anchor.offset\n            });\n          }\n          return scheduleAction(() => Editor.deleteBackward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteEntireSoftLine':\n        {\n          return scheduleAction(() => {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n          }, {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'insertLineBreak':\n        {\n          return scheduleAction(() => Editor.insertSoftBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertParagraph':\n        {\n          return scheduleAction(() => Editor.insertBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText':\n        {\n          if (isDataTransfer(data)) {\n            return scheduleAction(() => ReactEditor.insertData(editor, data), {\n              at: targetRange\n            });\n          }\n          var _text = data !== null && data !== void 0 ? data : ''; // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n          // the placeholder itself and thus includes the zero-width space inside edit events.\n\n          if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n            _text = _text.replace('\\uFEFF', '');\n          } // Pastes from the Android clipboard will generate `insertText` events.\n          // If the copied text contains any newlines, Android will append an\n          // extra newline to the end of the copied text.\n\n          if (type === 'insertText' && /.*\\n.*\\n$/.test(_text)) {\n            _text = _text.slice(0, -1);\n          } // If the text includes a newline, split it at newlines and paste each component\n          // string, with soft breaks in between each.\n\n          if (_text.includes('\\n')) {\n            return scheduleAction(() => {\n              var parts = _text.split('\\n');\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line);\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor);\n                }\n              });\n            }, {\n              at: targetRange\n            });\n          }\n          if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n            var [_start2, _end2] = Range.edges(targetRange);\n            var _diff = {\n              start: _start2.offset,\n              end: _end2.offset,\n              text: _text\n            }; // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n            // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n            // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n            // text events are fired with the correct target ranges, only the final 'insertComposition'\n            // isn't, so we can adjust the target range start offset if we are confident this is the\n            // swiftkey insert causing the issue.\n\n            if (_text && insertPositionHint && type === 'insertCompositionText') {\n              var hintPosition = insertPositionHint.start + insertPositionHint.text.search(/\\S|$/);\n              var diffPosition = _diff.start + _diff.text.search(/\\S|$/);\n              if (diffPosition === hintPosition + 1 && _diff.end === insertPositionHint.start + insertPositionHint.text.length) {\n                _diff.start -= 1;\n                insertPositionHint = null;\n                scheduleFlush();\n              } else {\n                insertPositionHint = false;\n              }\n            } else if (type === 'insertText') {\n              if (insertPositionHint === null) {\n                insertPositionHint = _diff;\n              } else if (insertPositionHint && Range.isCollapsed(targetRange) && insertPositionHint.end + insertPositionHint.text.length === _start2.offset) {\n                insertPositionHint = _objectSpread$3(_objectSpread$3({}, insertPositionHint), {}, {\n                  text: insertPositionHint.text + _text\n                });\n              } else {\n                insertPositionHint = false;\n              }\n            } else {\n              insertPositionHint = false;\n            }\n            if (canStoreDiff) {\n              storeDiff(_start2.path, _diff);\n              return;\n            }\n          }\n          return scheduleAction(() => Editor.insertText(editor, _text), {\n            at: targetRange\n          });\n        }\n    }\n  };\n  var hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor);\n  };\n  var hasPendingDiffs = () => {\n    var _EDITOR_TO_PENDING_DI4;\n    return !!((_EDITOR_TO_PENDING_DI4 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI4 !== void 0 && _EDITOR_TO_PENDING_DI4.length);\n  };\n  var hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs();\n  };\n  var isFlushing = () => {\n    return flushing;\n  };\n  var handleUserSelect = range => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range);\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      selection\n    } = editor;\n    if (!range) {\n      return;\n    }\n    var pathChanged = !selection || !Path.equals(selection.anchor.path, range.anchor.path);\n    var parentPathChanged = !selection || !Path.equals(selection.anchor.path.slice(0, -1), range.anchor.path.slice(0, -1));\n    if (pathChanged && insertPositionHint || parentPathChanged) {\n      insertPositionHint = false;\n    }\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY);\n    }\n  };\n  var handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      flush();\n    }\n  };\n  var handleKeyDown = _ => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true);\n      setTimeout(updatePlaceholderVisibility);\n    }\n  };\n  var scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush);\n    }\n  };\n  var handleDomMutations = mutations => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return;\n    }\n    if (mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))) {\n      var _EDITOR_TO_FORCE_REND;\n\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      (_EDITOR_TO_FORCE_REND = EDITOR_TO_FORCE_RENDER.get(editor)) === null || _EDITOR_TO_FORCE_REND === void 0 ? void 0 : _EDITOR_TO_FORCE_REND();\n    }\n  };\n  return {\n    flush,\n    scheduleFlush,\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n    isFlushing,\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n    handleDomMutations,\n    handleInput\n  };\n}\nfunction useIsMounted() {\n  var isMountedRef = useRef(false);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef.current;\n}\n\n/**\r\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\r\n */\n\nvar useIsomorphicLayoutEffect = CAN_USE_DOM ? useLayoutEffect : useEffect;\nfunction useMutationObserver(node, callback, options) {\n  var [mutationObserver] = useState(() => new MutationObserver(callback));\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords();\n  });\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    mutationObserver.observe(node.current, options);\n    return () => mutationObserver.disconnect();\n  }, [mutationObserver, node, options]);\n}\nvar _excluded$3 = [\"node\"];\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$2(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$2(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar MUTATION_OBSERVER_CONFIG$1 = {\n  subtree: true,\n  childList: true,\n  characterData: true\n};\nvar useAndroidInputManager = !IS_ANDROID ? () => null : _ref => {\n  var {\n      node\n    } = _ref,\n    options = _objectWithoutProperties(_ref, _excluded$3);\n  if (!IS_ANDROID) {\n    return null;\n  }\n  var editor = useSlateStatic();\n  var isMounted = useIsMounted();\n  var [inputManager] = useState(() => createAndroidInputManager(_objectSpread$2({\n    editor\n  }, options)));\n  useMutationObserver(node, inputManager.handleDomMutations, MUTATION_OBSERVER_CONFIG$1);\n  EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush);\n  if (isMounted) {\n    inputManager.flush();\n  }\n  return inputManager;\n};\nvar _excluded$2 = [\"anchor\", \"focus\"],\n  _excluded2$1 = [\"anchor\", \"focus\"];\nvar shallowCompare = (obj1, obj2) => Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]);\nvar isDecorationFlagsEqual = (range, other) => {\n  var rangeOwnProps = _objectWithoutProperties(range, _excluded$2);\n  var otherOwnProps = _objectWithoutProperties(other, _excluded2$1);\n  return range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] && shallowCompare(rangeOwnProps, otherOwnProps);\n};\n/**\r\n * Check if a list of decorator ranges are equal to another.\r\n *\r\n * PERF: this requires the two lists to also have the ranges inside them in the\r\n * same order, but this is an okay constraint for us since decorations are\r\n * kept in order, and the odd case where they aren't is okay to re-render for.\r\n */\n\nvar isElementDecorationsEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i];\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\r\n * Check if a list of decorator ranges are equal to another.\r\n *\r\n * PERF: this requires the two lists to also have the ranges inside them in the\r\n * same order, but this is an okay constraint for us since decorations are\r\n * kept in order, and the odd case where they aren't is okay to re-render for.\r\n */\n\nvar isTextDecorationsEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i]; // compare only offsets because paths doesn't matter for text\n\n    if (range.anchor.offset !== other.anchor.offset || range.focus.offset !== other.focus.offset || !isDecorationFlagsEqual(range, other)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\r\n * Leaf content strings.\r\n */\n\nvar String = props => {\n  var {\n    isLast,\n    leaf,\n    parent,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, text);\n  var parentPath = Path.parent(path);\n  var isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true; // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n\n  if (editor.isVoid(parent)) {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      length: Node.string(parent).length\n    });\n  } // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n\n  if (leaf.text === '' && parent.children[parent.children.length - 1] === text && !editor.isInline(parent) && Editor.string(editor, parentPath) === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isLineBreak: true,\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  } // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n\n  if (leaf.text === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  } // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return /*#__PURE__*/React.createElement(TextString, {\n      isTrailing: true,\n      text: leaf.text\n    });\n  }\n  return /*#__PURE__*/React.createElement(TextString, {\n    text: leaf.text\n  });\n};\n/**\r\n * Leaf strings with text in them.\r\n */\n\nvar TextString = props => {\n  var {\n    text,\n    isTrailing = false\n  } = props;\n  var ref = useRef(null);\n  var getTextContent = () => {\n    return \"\".concat(text !== null && text !== void 0 ? text : '').concat(isTrailing ? '\\n' : '');\n  };\n  var [initialText] = useState(getTextContent); // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n  // useLayoutEffect: updating our span before browser paint\n\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    var textWithTrailing = getTextContent();\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing;\n    } // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  }); // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n\n  return /*#__PURE__*/React.createElement(MemoizedText$1, {\n    ref: ref\n  }, initialText);\n};\nvar MemoizedText$1 = /*#__PURE__*/memo( /*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-string\": true,\n    ref: ref\n  }, props.children);\n}));\n/**\r\n * Leaf strings without text, render as zero-width strings.\r\n */\n\nvar ZeroWidthString = props => {\n  var {\n    length = 0,\n    isLineBreak = false,\n    isMarkPlaceholder = false\n  } = props;\n  var attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length\n  };\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), !IS_ANDROID || !isLineBreak ? '\\uFEFF' : null, isLineBreak ? /*#__PURE__*/React.createElement(\"br\", null) : null);\n};\nfunction disconnectPlaceholderResizeObserver(placeholderResizeObserver, releaseObserver) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect();\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null;\n    }\n  }\n}\nfunction clearTimeoutRef(timeoutRef) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = null;\n  }\n}\n/**\r\n * Individual leaves in a text node with unique formatting.\r\n */\n\nvar Leaf = props => {\n  var {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = props => /*#__PURE__*/React.createElement(DefaultLeaf, Object.assign({}, props))\n  } = props;\n  var editor = useSlateStatic();\n  var placeholderResizeObserver = useRef(null);\n  var placeholderRef = useRef(null);\n  var [showPlaceholder, setShowPlaceholder] = useState(false);\n  var showPlaceholderTimeoutRef = useRef(null);\n  var callbackPlaceholderRef = useCallback(placeholderEl => {\n    disconnectPlaceholderResizeObserver(placeholderResizeObserver, placeholderEl == null);\n    if (placeholderEl == null) {\n      var _leaf$onPlaceholderRe;\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor);\n      (_leaf$onPlaceholderRe = leaf.onPlaceholderResize) === null || _leaf$onPlaceholderRe === void 0 ? void 0 : _leaf$onPlaceholderRe.call(leaf, null);\n    } else {\n      EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl);\n      if (!placeholderResizeObserver.current) {\n        // Create a new observer and observe the placeholder element.\n        var ResizeObserver$1 = window.ResizeObserver || ResizeObserver;\n        placeholderResizeObserver.current = new ResizeObserver$1(() => {\n          var _leaf$onPlaceholderRe2;\n          (_leaf$onPlaceholderRe2 = leaf.onPlaceholderResize) === null || _leaf$onPlaceholderRe2 === void 0 ? void 0 : _leaf$onPlaceholderRe2.call(leaf, placeholderEl);\n        });\n      }\n      placeholderResizeObserver.current.observe(placeholderEl);\n      placeholderRef.current = placeholderEl;\n    }\n  }, [placeholderRef, leaf, editor]);\n  var children = /*#__PURE__*/React.createElement(String, {\n    isLast: isLast,\n    leaf: leaf,\n    parent: parent,\n    text: text\n  });\n  var leafIsPlaceholder = leaf[PLACEHOLDER_SYMBOL];\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true);\n          showPlaceholderTimeoutRef.current = null;\n        }, 300);\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef);\n      setShowPlaceholder(false);\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef);\n  }, [leafIsPlaceholder, setShowPlaceholder]);\n  if (leafIsPlaceholder && showPlaceholder) {\n    var placeholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef\n      }\n    };\n    children = /*#__PURE__*/React.createElement(React.Fragment, null, renderPlaceholder(placeholderProps), children);\n  } // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n\n  var attributes = {\n    'data-slate-leaf': true\n  };\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text\n  });\n};\nvar MemoizedLeaf = /*#__PURE__*/React.memo(Leaf, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && Text$1.equals(next.leaf, prev.leaf) && next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL];\n});\nvar DefaultLeaf = props => {\n  var {\n    attributes,\n    children\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", Object.assign({}, attributes), children);\n};\n\n/**\r\n * Text.\r\n */\n\nvar Text = props => {\n  var {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var ref = useRef(null);\n  var leaves = Text$1.decorations(text, decorations);\n  var key = ReactEditor.findKey(editor, text);\n  var children = [];\n  for (var i = 0; i < leaves.length; i++) {\n    var leaf = leaves[i];\n    children.push( /*#__PURE__*/React.createElement(MemoizedLeaf, {\n      isLast: isLast && i === leaves.length - 1,\n      key: \"\".concat(key.id, \"-\").concat(i),\n      renderPlaceholder: renderPlaceholder,\n      leaf: leaf,\n      text: text,\n      parent: parent,\n      renderLeaf: renderLeaf\n    }));\n  } // Update element-related weak maps with the DOM element ref.\n\n  var callbackRef = useCallback(span => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (span) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, span);\n      NODE_TO_ELEMENT.set(text, span);\n      ELEMENT_TO_NODE.set(span, text);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(text);\n      if (ref.current) {\n        ELEMENT_TO_NODE.delete(ref.current);\n      }\n    }\n    ref.current = span;\n  }, [ref, editor, key, text]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-node\": \"text\",\n    ref: callbackRef\n  }, children);\n};\nvar MemoizedText = /*#__PURE__*/React.memo(Text, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && isTextDecorationsEqual(next.decorations, prev.decorations);\n});\n\n/**\r\n * Element.\r\n */\n\nvar Element = props => {\n  var {\n    decorations,\n    element,\n    renderElement = p => /*#__PURE__*/React.createElement(DefaultElement, Object.assign({}, p)),\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var editor = useSlateStatic();\n  var readOnly = useReadOnly();\n  var isInline = editor.isInline(element);\n  var key = ReactEditor.findKey(editor, element);\n  var ref = useCallback(ref => {\n    // Update element-related weak maps with the DOM element ref.\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (ref) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.set(key, ref);\n      NODE_TO_ELEMENT.set(element, ref);\n      ELEMENT_TO_NODE.set(ref, element);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(element);\n    }\n  }, [editor, key, element]);\n  var children = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  }); // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n\n  var attributes = {\n    'data-slate-node': 'element',\n    ref\n  };\n  if (isInline) {\n    attributes['data-slate-inline'] = true;\n  } // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    var text = Node.string(element);\n    var dir = getDirection(text);\n    if (dir === 'rtl') {\n      attributes.dir = dir;\n    }\n  } // If it's a void node, wrap the children in extra void-specific elements.\n\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true;\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false;\n    }\n    var Tag = isInline ? 'span' : 'div';\n    var [[_text]] = Node.texts(element);\n    children = /*#__PURE__*/React.createElement(Tag, {\n      \"data-slate-spacer\": true,\n      style: {\n        height: '0',\n        color: 'transparent',\n        outline: 'none',\n        position: 'absolute'\n      }\n    }, /*#__PURE__*/React.createElement(MemoizedText, {\n      renderPlaceholder: renderPlaceholder,\n      decorations: [],\n      isLast: false,\n      parent: element,\n      text: _text\n    }));\n    NODE_TO_INDEX.set(_text, 0);\n    NODE_TO_PARENT.set(_text, element);\n  }\n  return renderElement({\n    attributes,\n    children,\n    element\n  });\n};\nvar MemoizedElement = /*#__PURE__*/React.memo(Element, (prev, next) => {\n  return prev.element === next.element && prev.renderElement === next.renderElement && prev.renderLeaf === next.renderLeaf && prev.renderPlaceholder === next.renderPlaceholder && isElementDecorationsEqual(prev.decorations, next.decorations) && (prev.selection === next.selection || !!prev.selection && !!next.selection && Range.equals(prev.selection, next.selection));\n});\n/**\r\n * The default element renderer.\r\n */\n\nvar DefaultElement = props => {\n  var {\n    attributes,\n    children,\n    element\n  } = props;\n  var editor = useSlateStatic();\n  var Tag = editor.isInline(element) ? 'span' : 'div';\n  return /*#__PURE__*/React.createElement(Tag, Object.assign({}, attributes, {\n    style: {\n      position: 'relative'\n    }\n  }), children);\n};\n\n/**\r\n * A React context for sharing the `decorate` prop of the editable.\r\n */\n\nvar DecorateContext = /*#__PURE__*/createContext(() => []);\n/**\r\n * Get the current `decorate` prop of the editable.\r\n */\n\nvar useDecorate = () => {\n  return useContext(DecorateContext);\n};\n\n/**\r\n * A React context for sharing the `selected` state of an element.\r\n */\n\nvar SelectedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `selected` state of an element.\r\n */\n\nvar useSelected = () => {\n  return useContext(SelectedContext);\n};\n\n/**\r\n * Children.\r\n */\n\nvar useChildren = props => {\n  var {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var decorate = useDecorate();\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, node);\n  var children = [];\n  var isLeafBlock = Element$1.isElement(node) && !editor.isInline(node) && Editor.hasInlines(editor, node);\n  for (var i = 0; i < node.children.length; i++) {\n    var p = path.concat(i);\n    var n = node.children[i];\n    var key = ReactEditor.findKey(editor, n);\n    var range = Editor.range(editor, p);\n    var sel = selection && Range.intersection(range, selection);\n    var ds = decorate([n, p]);\n    for (var dec of decorations) {\n      var d = Range.intersection(dec, range);\n      if (d) {\n        ds.push(d);\n      }\n    }\n    if (Element$1.isElement(n)) {\n      children.push( /*#__PURE__*/React.createElement(SelectedContext.Provider, {\n        key: \"provider-\".concat(key.id),\n        value: !!sel\n      }, /*#__PURE__*/React.createElement(MemoizedElement, {\n        decorations: ds,\n        element: n,\n        key: key.id,\n        renderElement: renderElement,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        selection: sel\n      })));\n    } else {\n      children.push( /*#__PURE__*/React.createElement(MemoizedText, {\n        decorations: ds,\n        key: key.id,\n        isLast: isLeafBlock && i === node.children.length - 1,\n        parent: node,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        text: n\n      }));\n    }\n    NODE_TO_INDEX.set(n, i);\n    NODE_TO_PARENT.set(n, node);\n  }\n  return children;\n};\n\n/**\r\n * A React context for sharing the `readOnly` state of the editor.\r\n */\n\nvar ReadOnlyContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `readOnly` state of the editor.\r\n */\n\nvar useReadOnly = () => {\n  return useContext(ReadOnlyContext);\n};\nvar SlateContext = /*#__PURE__*/createContext(null);\n/**\r\n * Get the current editor object from the React context.\r\n */\n\nvar useSlate = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    editor\n  } = context;\n  return editor;\n};\nvar useSlateWithV = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  return context;\n};\nfunction useTrackUserInput() {\n  var editor = useSlateStatic();\n  var receivedUserInput = useRef(false);\n  var animationFrameIdRef = useRef(0);\n  var onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return;\n    }\n    receivedUserInput.current = true;\n    var window = ReactEditor.getWindow(editor);\n    window.cancelAnimationFrame(animationFrameIdRef.current);\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false;\n    });\n  }, [editor]);\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), []);\n  return {\n    receivedUserInput,\n    onUserInput\n  };\n}\nvar TRIPLE_CLICK = 3;\n\n/**\r\n * Hotkey mappings for each platform.\r\n */\n\nvar HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z'\n};\nvar APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t'\n};\nvar WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z']\n};\n/**\r\n * Create a platform-aware hotkey checker.\r\n */\n\nvar create = key => {\n  var generic = HOTKEYS[key];\n  var apple = APPLE_HOTKEYS[key];\n  var windows = WINDOWS_HOTKEYS[key];\n  var isGeneric = generic && isHotkey(generic);\n  var isApple = apple && isHotkey(apple);\n  var isWindows = windows && isHotkey(windows);\n  return event => {\n    if (isGeneric && isGeneric(event)) return true;\n    if (IS_APPLE && isApple && isApple(event)) return true;\n    if (!IS_APPLE && isWindows && isWindows(event)) return true;\n    return false;\n  };\n};\n/**\r\n * Hotkeys.\r\n */\n\nvar Hotkeys = {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo')\n};\nvar createRestoreDomManager = (editor, receivedUserInput) => {\n  var bufferedMutations = [];\n  var clear = () => {\n    bufferedMutations = [];\n  };\n  var registerMutations = mutations => {\n    if (!receivedUserInput.current) {\n      return;\n    }\n    var trackedMutations = mutations.filter(mutation => isTrackedMutation(editor, mutation, mutations));\n    bufferedMutations.push(...trackedMutations);\n  };\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return;\n        }\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling);\n        });\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node);\n        });\n      }); // Clear buffered mutations to ensure we don't undo them twice\n\n      clear();\n    }\n  }\n  return {\n    registerMutations,\n    restoreDOM,\n    clear\n  };\n};\nvar MUTATION_OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true\n}; // We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\n\nclass RestoreDOMComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.context = null;\n    this.manager = null;\n    this.mutationObserver = null;\n  }\n  observe() {\n    var _this$mutationObserve;\n    var {\n      node\n    } = this.props;\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    (_this$mutationObserve = this.mutationObserver) === null || _this$mutationObserve === void 0 ? void 0 : _this$mutationObserve.observe(node.current, MUTATION_OBSERVER_CONFIG);\n  }\n  componentDidMount() {\n    var {\n      receivedUserInput\n    } = this.props;\n    var editor = this.context;\n    this.manager = createRestoreDomManager(editor, receivedUserInput);\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations);\n    this.observe();\n  }\n  getSnapshotBeforeUpdate() {\n    var _this$mutationObserve2, _this$mutationObserve3, _this$manager2;\n    var pendingMutations = (_this$mutationObserve2 = this.mutationObserver) === null || _this$mutationObserve2 === void 0 ? void 0 : _this$mutationObserve2.takeRecords();\n    if (pendingMutations !== null && pendingMutations !== void 0 && pendingMutations.length) {\n      var _this$manager;\n      (_this$manager = this.manager) === null || _this$manager === void 0 ? void 0 : _this$manager.registerMutations(pendingMutations);\n    }\n    (_this$mutationObserve3 = this.mutationObserver) === null || _this$mutationObserve3 === void 0 ? void 0 : _this$mutationObserve3.disconnect();\n    (_this$manager2 = this.manager) === null || _this$manager2 === void 0 ? void 0 : _this$manager2.restoreDOM();\n    return null;\n  }\n  componentDidUpdate() {\n    var _this$manager3;\n    (_this$manager3 = this.manager) === null || _this$manager3 === void 0 ? void 0 : _this$manager3.clear();\n    this.observe();\n  }\n  componentWillUnmount() {\n    var _this$mutationObserve4;\n    (_this$mutationObserve4 = this.mutationObserver) === null || _this$mutationObserve4 === void 0 ? void 0 : _this$mutationObserve4.disconnect();\n  }\n  render() {\n    return this.props.children;\n  }\n}\nRestoreDOMComponent.contextType = EditorContext;\nvar RestoreDOM = IS_ANDROID ? RestoreDOMComponent : _ref => {\n  var {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\nvar _excluded$1 = [\"autoFocus\", \"decorate\", \"onDOMBeforeInput\", \"placeholder\", \"readOnly\", \"renderElement\", \"renderLeaf\", \"renderPlaceholder\", \"scrollSelectionIntoView\", \"style\", \"as\", \"disableDefaultStyles\"],\n  _excluded2 = [\"text\"];\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys$1(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys$1(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nvar Children = props => /*#__PURE__*/React.createElement(React.Fragment, null, useChildren(props));\n/**\r\n * Editable.\r\n */\n\nvar Editable = props => {\n  var defaultRenderPlaceholder = useCallback(props => /*#__PURE__*/React.createElement(DefaultPlaceholder, Object.assign({}, props)), []);\n  var {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderLeaf,\n      renderPlaceholder = defaultRenderPlaceholder,\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style: userStyle = {},\n      as: Component = 'div',\n      disableDefaultStyles = false\n    } = props,\n    attributes = _objectWithoutProperties(props, _excluded$1);\n  var editor = useSlate(); // Rerender editor when composition status changed\n\n  var [isComposing, setIsComposing] = useState(false);\n  var ref = useRef(null);\n  var deferredOperations = useRef([]);\n  var [placeholderHeight, setPlaceholderHeight] = useState();\n  var {\n    onUserInput,\n    receivedUserInput\n  } = useTrackUserInput();\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender); // Update internal state on each render.\n\n  IS_READ_ONLY.set(editor, readOnly); // Keep track of some state for the event handler logic.\n\n  var state = useMemo(() => ({\n    isDraggingInternally: false,\n    isUpdatingSelection: false,\n    latestElement: null,\n    hasMarkPlaceholder: false\n  }), []); // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n    }\n  }, [autoFocus]);\n  /**\r\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\r\n   *\r\n   * It is defined as a reference to simplify hook dependencies and clarify that\r\n   * it needs to be initialized.\r\n   */\n\n  var androidInputManagerRef = useRef(); // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n\n  var onDOMSelectionChange = useMemo(() => throttle(() => {\n    var androidInputManager = androidInputManagerRef.current;\n    if ((IS_ANDROID || !ReactEditor.isComposing(editor)) && (!state.isUpdatingSelection || androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing()) && !state.isDraggingInternally) {\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      var {\n        activeElement\n      } = root;\n      var el = ReactEditor.toDOMNode(editor, editor);\n      var domSelection = root.getSelection();\n      if (activeElement === el) {\n        state.latestElement = activeElement;\n        IS_FOCUSED.set(editor, true);\n      } else {\n        IS_FOCUSED.delete(editor);\n      }\n      if (!domSelection) {\n        return Transforms.deselect(editor);\n      }\n      var {\n        anchorNode,\n        focusNode\n      } = domSelection;\n      var anchorNodeSelectable = ReactEditor.hasEditableTarget(editor, anchorNode) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode);\n      var focusNodeSelectable = ReactEditor.hasEditableTarget(editor, focusNode) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode);\n      if (anchorNodeSelectable && focusNodeSelectable) {\n        var range = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        if (range) {\n          if (!ReactEditor.isComposing(editor) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.hasPendingChanges()) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing())) {\n            Transforms.select(editor, range);\n          } else {\n            androidInputManager === null || androidInputManager === void 0 ? void 0 : androidInputManager.handleUserSelect(range);\n          }\n        }\n      } // Deselect the editor if the dom selection is not selectable in readonly mode\n\n      if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n        Transforms.deselect(editor);\n      }\n    }\n  }, 100), [editor, readOnly, state]);\n  var scheduleOnDOMSelectionChange = useMemo(() => debounce(onDOMSelectionChange, 0), [onDOMSelectionChange]);\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange\n  });\n  useIsomorphicLayoutEffect(() => {\n    var _androidInputManagerR, _androidInputManagerR2;\n\n    // Update element-related weak maps with the DOM element ref.\n    var window;\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window);\n      EDITOR_TO_ELEMENT.set(editor, ref.current);\n      NODE_TO_ELEMENT.set(editor, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, editor);\n    } else {\n      NODE_TO_ELEMENT.delete(editor);\n    } // Make sure the DOM selection state is in sync.\n\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (!domSelection || !ReactEditor.isFocused(editor) || (_androidInputManagerR = androidInputManagerRef.current) !== null && _androidInputManagerR !== void 0 && _androidInputManagerR.hasPendingAction()) {\n      return;\n    }\n    var setDomSelection = forceChange => {\n      var hasDomSelection = domSelection.type !== 'None'; // If the DOM selection is properly unset, we're done.\n\n      if (!selection && !hasDomSelection) {\n        return;\n      } // verify that the dom selection is in the editor\n\n      var editorElement = EDITOR_TO_ELEMENT.get(editor);\n      var hasDomSelectionInEditor = false;\n      if (editorElement.contains(domSelection.anchorNode) && editorElement.contains(domSelection.focusNode)) {\n        hasDomSelectionInEditor = true;\n      } // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n\n      if (hasDomSelection && hasDomSelectionInEditor && selection && !forceChange) {\n        var slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true\n        });\n        if (slateRange && Range.equals(slateRange, selection)) {\n          var _anchorNode$parentEle;\n          if (!state.hasMarkPlaceholder) {\n            return;\n          } // Ensure selection is inside the mark placeholder\n\n          var {\n            anchorNode\n          } = domSelection;\n          if (anchorNode !== null && anchorNode !== void 0 && (_anchorNode$parentEle = anchorNode.parentElement) !== null && _anchorNode$parentEle !== void 0 && _anchorNode$parentEle.hasAttribute('data-slate-mark-placeholder')) {\n            return;\n          }\n        }\n      } // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        return;\n      } // Otherwise the DOM selection is out of sync, so update it.\n\n      state.isUpdatingSelection = true;\n      var newDomRange = selection && ReactEditor.toDOMRange(editor, selection);\n      if (newDomRange) {\n        if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n          domSelection.collapseToEnd();\n        } else if (Range.isBackward(selection)) {\n          domSelection.setBaseAndExtent(newDomRange.endContainer, newDomRange.endOffset, newDomRange.startContainer, newDomRange.startOffset);\n        } else {\n          domSelection.setBaseAndExtent(newDomRange.startContainer, newDomRange.startOffset, newDomRange.endContainer, newDomRange.endOffset);\n        }\n        scrollSelectionIntoView(editor, newDomRange);\n      } else {\n        domSelection.removeAllRanges();\n      }\n      return newDomRange;\n    };\n    var newDomRange = setDomSelection();\n    var ensureSelection = ((_androidInputManagerR2 = androidInputManagerRef.current) === null || _androidInputManagerR2 === void 0 ? void 0 : _androidInputManagerR2.isFlushing()) === 'action';\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          var el = ReactEditor.toDOMNode(editor, editor);\n          el.focus();\n        }\n        state.isUpdatingSelection = false;\n      });\n      return;\n    }\n    var timeoutId = null;\n    var animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        var ensureDomSelection = forceChange => {\n          try {\n            var el = ReactEditor.toDOMNode(editor, editor);\n            el.focus();\n            setDomSelection(forceChange);\n          } catch (e) {// Ignore, dom and state might be out of sync\n          }\n        }; // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n\n        ensureDomSelection();\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true);\n          state.isUpdatingSelection = false;\n        });\n      }\n    });\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }); // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n\n  var onDOMBeforeInput = useCallback(event => {\n    onUserInput();\n    if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target) && !isDOMEventHandled(event, propsOnDOMBeforeInput)) {\n      var _EDITOR_TO_USER_SELEC;\n\n      // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n      if (androidInputManagerRef.current) {\n        return androidInputManagerRef.current.handleDOMBeforeInput(event);\n      } // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n      // triggering a `beforeinput` expecting the change to be applied to the immediately before\n      // set selection.\n\n      scheduleOnDOMSelectionChange.flush();\n      onDOMSelectionChange.flush();\n      var {\n        selection\n      } = editor;\n      var {\n        inputType: type\n      } = event;\n      var data = event.dataTransfer || event.data || undefined;\n      var isCompositionChange = type === 'insertCompositionText' || type === 'deleteCompositionText'; // COMPAT: use composition change events as a hint to where we should insert\n      // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n\n      if (isCompositionChange && ReactEditor.isComposing(editor)) {\n        return;\n      }\n      var native = false;\n      if (type === 'insertText' && selection && Range.isCollapsed(selection) &&\n      // Only use native character insertion for single characters a-z or space for now.\n      // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n      // causes duplicate inserts.\n      event.data && event.data.length === 1 && /[a-z ]/i.test(event.data) &&\n      // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n      // When there is an inline element, e.g. a link, and you select\n      // right after it (the start of the next node).\n      selection.anchor.offset !== 0) {\n        var _node$parentElement, _window$getComputedSt;\n        native = true; // Skip native if there are marks, as\n        // `insertText` will insert a node, not just text.\n\n        if (editor.marks) {\n          native = false;\n        } // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n        // Therefore we don't allow native events to insert text at the end of anchor nodes.\n\n        var {\n          anchor\n        } = selection;\n        var [node, offset] = ReactEditor.toDOMPoint(editor, anchor);\n        var anchorNode = (_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.closest('a');\n        var window = ReactEditor.getWindow(editor);\n        if (native && anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n          var _lastText$textContent;\n\n          // Find the last text node inside the anchor.\n          var lastText = window === null || window === void 0 ? void 0 : window.document.createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT).lastChild();\n          if (lastText === node && ((_lastText$textContent = lastText.textContent) === null || _lastText$textContent === void 0 ? void 0 : _lastText$textContent.length) === offset) {\n            native = false;\n          }\n        } // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n        // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n\n        if (native && node.parentElement && (window === null || window === void 0 ? void 0 : (_window$getComputedSt = window.getComputedStyle(node.parentElement)) === null || _window$getComputedSt === void 0 ? void 0 : _window$getComputedSt.whiteSpace) === 'pre') {\n          var block = Editor.above(editor, {\n            at: anchor.path,\n            match: n => Element$1.isElement(n) && Editor.isBlock(editor, n)\n          });\n          if (block && Node.string(block[0]).includes('\\t')) {\n            native = false;\n          }\n        }\n      } // COMPAT: For the deleting forward/backward input types we don't want\n      // to change the selection because it is the range that will be deleted,\n      // and those commands determine that for themselves.\n\n      if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n        var [targetRange] = event.getTargetRanges();\n        if (targetRange) {\n          var range = ReactEditor.toSlateRange(editor, targetRange, {\n            exactMatch: false,\n            suppressThrow: false\n          });\n          if (!selection || !Range.equals(selection, range)) {\n            native = false;\n            var selectionRef = !isCompositionChange && editor.selection && Editor.rangeRef(editor, editor.selection);\n            Transforms.select(editor, range);\n            if (selectionRef) {\n              EDITOR_TO_USER_SELECTION.set(editor, selectionRef);\n            }\n          }\n        }\n      } // Composition change types occur while a user is composing text and can't be\n      // cancelled. Let them through and wait for the composition to end.\n\n      if (isCompositionChange) {\n        return;\n      }\n      if (!native) {\n        event.preventDefault();\n      } // COMPAT: If the selection is expanded, even if the command seems like\n      // a delete forward/backward command it should delete the selection.\n\n      if (selection && Range.isExpanded(selection) && type.startsWith('delete')) {\n        var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n        Editor.deleteFragment(editor, {\n          direction\n        });\n        return;\n      }\n      switch (type) {\n        case 'deleteByComposition':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          {\n            Editor.deleteFragment(editor);\n            break;\n          }\n        case 'deleteContent':\n        case 'deleteContentForward':\n          {\n            Editor.deleteForward(editor);\n            break;\n          }\n        case 'deleteContentBackward':\n          {\n            Editor.deleteBackward(editor);\n            break;\n          }\n        case 'deleteEntireSoftLine':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteWordBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'deleteWordForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'insertLineBreak':\n          Editor.insertSoftBreak(editor);\n          break;\n        case 'insertParagraph':\n          {\n            Editor.insertBreak(editor);\n            break;\n          }\n        case 'insertFromComposition':\n        case 'insertFromDrop':\n        case 'insertFromPaste':\n        case 'insertFromYank':\n        case 'insertReplacementText':\n        case 'insertText':\n          {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false);\n                IS_COMPOSING.set(editor, false);\n              }\n            } // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n\n            if ((data === null || data === void 0 ? void 0 : data.constructor.name) === 'DataTransfer') {\n              ReactEditor.insertData(editor, data);\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() => Editor.insertText(editor, data));\n              } else {\n                Editor.insertText(editor, data);\n              }\n            }\n            break;\n          }\n      } // Restore the actual user section if nothing manually set it.\n\n      var toRestore = (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n      EDITOR_TO_USER_SELECTION.delete(editor);\n      if (toRestore && (!editor.selection || !Range.equals(editor.selection, toRestore))) {\n        Transforms.select(editor, toRestore);\n      }\n    }\n  }, [editor, onDOMSelectionChange, onUserInput, propsOnDOMBeforeInput, readOnly, scheduleOnDOMSelectionChange]);\n  var callbackRef = useCallback(node => {\n    if (node == null) {\n      onDOMSelectionChange.cancel();\n      scheduleOnDOMSelectionChange.cancel();\n      EDITOR_TO_ELEMENT.delete(editor);\n      NODE_TO_ELEMENT.delete(editor);\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput);\n      }\n    } else {\n      // Attach a native DOM event handler for `beforeinput` events, because React's\n      // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n      // real `beforeinput` events sadly... (2019/11/04)\n      // https://github.com/facebook/react/issues/11211\n      if (HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        node.addEventListener('beforeinput', onDOMBeforeInput);\n      }\n    }\n    ref.current = node;\n  }, [onDOMSelectionChange, scheduleOnDOMSelectionChange, editor, onDOMBeforeInput]); // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n\n  useIsomorphicLayoutEffect(() => {\n    var window = ReactEditor.getWindow(editor);\n    window.document.addEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    return () => {\n      window.document.removeEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    };\n  }, [scheduleOnDOMSelectionChange]);\n  var decorations = decorate([editor, []]);\n  var showPlaceholder = placeholder && editor.children.length === 1 && Array.from(Node.texts(editor)).length === 1 && Node.string(editor) === '' && !isComposing;\n  var placeHolderResizeHandler = useCallback(placeholderEl => {\n    if (placeholderEl && showPlaceholder) {\n      var _placeholderEl$getBou;\n      setPlaceholderHeight((_placeholderEl$getBou = placeholderEl.getBoundingClientRect()) === null || _placeholderEl$getBou === void 0 ? void 0 : _placeholderEl$getBou.height);\n    } else {\n      setPlaceholderHeight(undefined);\n    }\n  }, [showPlaceholder]);\n  if (showPlaceholder) {\n    var start = Editor.start(editor, []);\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start\n    });\n  }\n  var {\n    marks\n  } = editor;\n  state.hasMarkPlaceholder = false;\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    var {\n      anchor\n    } = editor.selection;\n    var leaf = Node.leaf(editor, anchor.path);\n    var rest = _objectWithoutProperties(leaf, _excluded2); // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n\n    if (!Text$1.equals(leaf, marks, {\n      loose: true\n    })) {\n      state.hasMarkPlaceholder = true;\n      var unset = Object.fromEntries(Object.keys(rest).map(mark => [mark, null]));\n      decorations.push(_objectSpread$1(_objectSpread$1(_objectSpread$1({\n        [MARK_PLACEHOLDER_SYMBOL]: true\n      }, unset), marks), {}, {\n        anchor,\n        focus: anchor\n      }));\n    }\n  } // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n\n  useEffect(() => {\n    setTimeout(() => {\n      var {\n        selection\n      } = editor;\n      if (selection) {\n        var {\n          anchor: _anchor\n        } = selection;\n        var _text = Node.leaf(editor, _anchor.path); // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n\n        if (marks && !Text$1.equals(_text, marks, {\n          loose: true\n        })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks);\n          return;\n        }\n      }\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n    });\n  });\n  return /*#__PURE__*/React.createElement(ReadOnlyContext.Provider, {\n    value: readOnly\n  }, /*#__PURE__*/React.createElement(DecorateContext.Provider, {\n    value: decorate\n  }, /*#__PURE__*/React.createElement(RestoreDOM, {\n    node: ref,\n    receivedUserInput: receivedUserInput\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({\n    role: readOnly ? undefined : 'textbox',\n    \"aria-multiline\": readOnly ? undefined : true\n  }, attributes, {\n    // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n    // have to use hacks to make these replacement-based features work.\n    // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n    // mismatch warning app moves to browser. Pass-through consumer props when\n    // not CAN_USE_DOM (SSR) and default to falsy value\n    spellCheck: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.spellCheck : false,\n    autoCorrect: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCorrect : 'false',\n    autoCapitalize: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCapitalize : 'false',\n    \"data-slate-editor\": true,\n    \"data-slate-node\": \"value\",\n    // explicitly set this\n    contentEditable: !readOnly,\n    // in some cases, a decoration needs access to the range / selection to decorate a text node,\n    // then you will select the whole text node when you select part the of text\n    // this magic zIndex=\"-1\" will fix it\n    zindex: -1,\n    suppressContentEditableWarning: true,\n    ref: callbackRef,\n    style: _objectSpread$1(_objectSpread$1({}, disableDefaultStyles ? {} : _objectSpread$1({\n      // Allow positioning relative to the editable element.\n      position: 'relative',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word'\n    }, placeholderHeight ? {\n      minHeight: placeholderHeight\n    } : {})), userStyle),\n    onBeforeInput: useCallback(event => {\n      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n      // fall back to React's leaky polyfill instead just for it. It\n      // only works for the `insertText` input type.\n      if (!HAS_BEFORE_INPUT_SUPPORT && !readOnly && !isEventHandled(event, attributes.onBeforeInput) && ReactEditor.hasSelectableTarget(editor, event.target)) {\n        event.preventDefault();\n        if (!ReactEditor.isComposing(editor)) {\n          var _text2 = event.data;\n          Editor.insertText(editor, _text2);\n        }\n      }\n    }, [attributes.onBeforeInput, editor, readOnly]),\n    onInput: useCallback(event => {\n      if (isEventHandled(event, attributes.onInput)) {\n        return;\n      }\n      if (androidInputManagerRef.current) {\n        androidInputManagerRef.current.handleInput();\n        return;\n      } // Flush native operations, as native events will have propogated\n      // and we can correctly compare DOM text values in components\n      // to stop rendering, so that browser functions like autocorrect\n      // and spellcheck work as expected.\n\n      for (var op of deferredOperations.current) {\n        op();\n      }\n      deferredOperations.current = [];\n    }, [attributes.onInput]),\n    onBlur: useCallback(event => {\n      if (readOnly || state.isUpdatingSelection || !ReactEditor.hasSelectableTarget(editor, event.target) || isEventHandled(event, attributes.onBlur)) {\n        return;\n      } // COMPAT: If the current `activeElement` is still the previous\n      // one, this is due to the window being blurred when the tab\n      // itself becomes unfocused, so we want to abort early to allow to\n      // editor to stay focused when the tab becomes focused again.\n\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      if (state.latestElement === root.activeElement) {\n        return;\n      }\n      var {\n        relatedTarget\n      } = event;\n      var el = ReactEditor.toDOMNode(editor, editor); // COMPAT: The event should be ignored if the focus is returning\n      // to the editor from an embedded editable element (eg. an <input>\n      // element inside a void node).\n\n      if (relatedTarget === el) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving from\n      // the editor to inside a void node's spacer element.\n\n      if (isDOMElement(relatedTarget) && relatedTarget.hasAttribute('data-slate-spacer')) {\n        return;\n      } // COMPAT: The event should be ignored if the focus is moving to a\n      // non- editable section of an element that isn't a void node (eg.\n      // a list item of the check list example).\n\n      if (relatedTarget != null && isDOMNode(relatedTarget) && ReactEditor.hasDOMNode(editor, relatedTarget)) {\n        var node = ReactEditor.toSlateNode(editor, relatedTarget);\n        if (Element$1.isElement(node) && !editor.isVoid(node)) {\n          return;\n        }\n      } // COMPAT: Safari doesn't always remove the selection even if the content-\n      // editable element no longer has focus. Refer to:\n      // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n\n      if (IS_WEBKIT) {\n        var domSelection = root.getSelection();\n        domSelection === null || domSelection === void 0 ? void 0 : domSelection.removeAllRanges();\n      }\n      IS_FOCUSED.delete(editor);\n    }, [readOnly, state.isUpdatingSelection, state.latestElement, editor, attributes.onBlur]),\n    onClick: useCallback(event => {\n      if (ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onClick) && isDOMNode(event.target)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node); // At this time, the Slate document may be arbitrarily different,\n        // because onClick handlers can change the document before we get here.\n        // Therefore we must check that this path actually exists,\n        // and that it still refers to the same node.\n\n        if (!Editor.hasPath(editor, path) || Node.get(editor, path) !== node) {\n          return;\n        }\n        if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n          var blockPath = path;\n          if (!(Element$1.isElement(node) && Editor.isBlock(editor, node))) {\n            var _block$;\n            var block = Editor.above(editor, {\n              match: n => Element$1.isElement(n) && Editor.isBlock(editor, n),\n              at: path\n            });\n            blockPath = (_block$ = block === null || block === void 0 ? void 0 : block[1]) !== null && _block$ !== void 0 ? _block$ : path.slice(0, 1);\n          }\n          var range = Editor.range(editor, blockPath);\n          Transforms.select(editor, range);\n          return;\n        }\n        if (readOnly) {\n          return;\n        }\n        var _start = Editor.start(editor, path);\n        var end = Editor.end(editor, path);\n        var startVoid = Editor.void(editor, {\n          at: _start\n        });\n        var endVoid = Editor.void(editor, {\n          at: end\n        });\n        if (startVoid && endVoid && Path.equals(startVoid[1], endVoid[1])) {\n          var _range = Editor.range(editor, _start);\n          Transforms.select(editor, _range);\n        }\n      }\n    }, [editor, attributes.onClick, readOnly]),\n    onCompositionEnd: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n        var _androidInputManagerR3;\n        if (ReactEditor.isComposing(editor)) {\n          setIsComposing(false);\n          IS_COMPOSING.set(editor, false);\n        }\n        (_androidInputManagerR3 = androidInputManagerRef.current) === null || _androidInputManagerR3 === void 0 ? void 0 : _androidInputManagerR3.handleCompositionEnd(event);\n        if (isEventHandled(event, attributes.onCompositionEnd) || IS_ANDROID) {\n          return;\n        } // COMPAT: In Chrome, `beforeinput` events for compositions\n        // aren't correct and never fire the \"insertFromComposition\"\n        // type that we need. So instead, insert whenever a composition\n        // ends since it will already have been committed to the DOM.\n\n        if (!IS_WEBKIT && !IS_FIREFOX_LEGACY && !IS_IOS && !IS_WECHATBROWSER && !IS_UC_MOBILE && event.data) {\n          var placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n          EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor); // Ensure we insert text with the marks the user was actually seeing\n\n          if (placeholderMarks !== undefined) {\n            EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n            editor.marks = placeholderMarks;\n          }\n          Editor.insertText(editor, event.data);\n          var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n          EDITOR_TO_USER_MARKS.delete(editor);\n          if (userMarks !== undefined) {\n            editor.marks = userMarks;\n          }\n        }\n      }\n    }, [attributes.onCompositionEnd, editor]),\n    onCompositionUpdate: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionUpdate)) {\n        if (!ReactEditor.isComposing(editor)) {\n          setIsComposing(true);\n          IS_COMPOSING.set(editor, true);\n        }\n      }\n    }, [attributes.onCompositionUpdate, editor]),\n    onCompositionStart: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n        var _androidInputManagerR4;\n        (_androidInputManagerR4 = androidInputManagerRef.current) === null || _androidInputManagerR4 === void 0 ? void 0 : _androidInputManagerR4.handleCompositionStart(event);\n        if (isEventHandled(event, attributes.onCompositionStart) || IS_ANDROID) {\n          return;\n        }\n        setIsComposing(true);\n        var {\n          selection\n        } = editor;\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n            return;\n          }\n          var inline = Editor.above(editor, {\n            match: n => Element$1.isElement(n) && Editor.isInline(editor, n),\n            mode: 'highest'\n          });\n          if (inline) {\n            var [, inlinePath] = inline;\n            if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n              var point = Editor.after(editor, inlinePath);\n              Transforms.setSelection(editor, {\n                anchor: point,\n                focus: point\n              });\n            }\n          }\n        }\n      }\n    }, [attributes.onCompositionStart, editor]),\n    onCopy: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCopy) && !isDOMEventTargetInput(event)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'copy');\n      }\n    }, [attributes.onCopy, editor]),\n    onCut: useCallback(event => {\n      if (!readOnly && ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCut) && !isDOMEventTargetInput(event)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'cut');\n        var {\n          selection\n        } = editor;\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n          } else {\n            var node = Node.parent(editor, selection.anchor.path);\n            if (Editor.isVoid(editor, node)) {\n              Transforms.delete(editor);\n            }\n          }\n        }\n      }\n    }, [readOnly, editor, attributes.onCut]),\n    onDragOver: useCallback(event => {\n      if (ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragOver)) {\n        // Only when the target is void, call `preventDefault` to signal\n        // that drops are allowed. Editable content is droppable by\n        // default, and calling `preventDefault` hides the cursor.\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        if (Element$1.isElement(node) && Editor.isVoid(editor, node)) {\n          event.preventDefault();\n        }\n      }\n    }, [attributes.onDragOver, editor]),\n    onDragStart: useCallback(event => {\n      if (!readOnly && ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragStart)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node);\n        var voidMatch = Element$1.isElement(node) && Editor.isVoid(editor, node) || Editor.void(editor, {\n          at: path,\n          voids: true\n        }); // If starting a drag on a void node, make sure it is selected\n        // so that it shows up in the selection's fragment.\n\n        if (voidMatch) {\n          var range = Editor.range(editor, path);\n          Transforms.select(editor, range);\n        }\n        state.isDraggingInternally = true;\n        ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag');\n      }\n    }, [readOnly, editor, attributes.onDragStart, state]),\n    onDrop: useCallback(event => {\n      if (!readOnly && ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDrop)) {\n        event.preventDefault(); // Keep a reference to the dragged range before updating selection\n\n        var draggedRange = editor.selection; // Find the range where the drop happened\n\n        var range = ReactEditor.findEventRange(editor, event);\n        var data = event.dataTransfer;\n        Transforms.select(editor, range);\n        if (state.isDraggingInternally) {\n          if (draggedRange && !Range.equals(draggedRange, range) && !Editor.void(editor, {\n            at: range,\n            voids: true\n          })) {\n            Transforms.delete(editor, {\n              at: draggedRange\n            });\n          }\n        }\n        ReactEditor.insertData(editor, data); // When dragging from another source into the editor, it's possible\n        // that the current editor does not have focus.\n\n        if (!ReactEditor.isFocused(editor)) {\n          ReactEditor.focus(editor);\n        }\n      }\n      state.isDraggingInternally = false;\n    }, [readOnly, editor, attributes.onDrop, state]),\n    onDragEnd: useCallback(event => {\n      if (!readOnly && state.isDraggingInternally && attributes.onDragEnd && ReactEditor.hasTarget(editor, event.target)) {\n        attributes.onDragEnd(event);\n      } // When dropping on a different droppable element than the current editor,\n      // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n      // Note: `onDragEnd` is only called when `onDrop` is not called\n\n      state.isDraggingInternally = false;\n    }, [readOnly, state, attributes, editor]),\n    onFocus: useCallback(event => {\n      if (!readOnly && !state.isUpdatingSelection && ReactEditor.hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onFocus)) {\n        var el = ReactEditor.toDOMNode(editor, editor);\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        state.latestElement = root.activeElement; // COMPAT: If the editor has nested editable elements, the focus\n        // can go to them. In Firefox, this must be prevented because it\n        // results in issues with keyboard navigation. (2017/03/30)\n\n        if (IS_FIREFOX && event.target !== el) {\n          el.focus();\n          return;\n        }\n        IS_FOCUSED.set(editor, true);\n      }\n    }, [readOnly, state, editor, attributes.onFocus]),\n    onKeyDown: useCallback(event => {\n      if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target)) {\n        var _androidInputManagerR5;\n        (_androidInputManagerR5 = androidInputManagerRef.current) === null || _androidInputManagerR5 === void 0 ? void 0 : _androidInputManagerR5.handleKeyDown(event);\n        var {\n          nativeEvent\n        } = event; // COMPAT: The composition end event isn't fired reliably in all browsers,\n        // so we sometimes might end up stuck in a composition state even though we\n        // aren't composing any more.\n\n        if (ReactEditor.isComposing(editor) && nativeEvent.isComposing === false) {\n          IS_COMPOSING.set(editor, false);\n          setIsComposing(false);\n        }\n        if (isEventHandled(event, attributes.onKeyDown) || ReactEditor.isComposing(editor)) {\n          return;\n        }\n        var {\n          selection\n        } = editor;\n        var element = editor.children[selection !== null ? selection.focus.path[0] : 0];\n        var isRTL = getDirection(Node.string(element)) === 'rtl'; // COMPAT: Since we prevent the default behavior on\n        // `beforeinput` events, the browser doesn't think there's ever\n        // any history stack to undo or redo, so we have to manage these\n        // hotkeys ourselves. (2019/11/06)\n\n        if (Hotkeys.isRedo(nativeEvent)) {\n          event.preventDefault();\n          var maybeHistoryEditor = editor;\n          if (typeof maybeHistoryEditor.redo === 'function') {\n            maybeHistoryEditor.redo();\n          }\n          return;\n        }\n        if (Hotkeys.isUndo(nativeEvent)) {\n          event.preventDefault();\n          var _maybeHistoryEditor = editor;\n          if (typeof _maybeHistoryEditor.undo === 'function') {\n            _maybeHistoryEditor.undo();\n          }\n          return;\n        } // COMPAT: Certain browsers don't handle the selection updates\n        // properly. In Chrome, the selection isn't properly extended.\n        // And in Firefox, the selection isn't properly collapsed.\n        // (2017/10/17)\n\n        if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isMoveLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line'\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus'\n          });\n          return;\n        } // COMPAT: If a void node is selected, or a zero-width text node\n        // adjacent to an inline is selected, we need to handle these\n        // hotkeys manually because browsers won't be able to skip over\n        // the void node with the zero-width space not being an empty\n        // string.\n\n        if (Hotkeys.isMoveBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: !isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'start'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: 'end'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: !isRTL\n          });\n          return;\n        }\n        if (Hotkeys.isMoveWordForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: isRTL\n          });\n          return;\n        } // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to guessing at the input intention for hotkeys.\n        // COMPAT: In iOS, some of these hotkeys are handled in the\n\n        if (!HAS_BEFORE_INPUT_SUPPORT) {\n          // We don't have a core behavior for these, but they change the\n          // DOM if we don't prevent them, so we have to.\n          if (Hotkeys.isBold(nativeEvent) || Hotkeys.isItalic(nativeEvent) || Hotkeys.isTransposeCharacter(nativeEvent)) {\n            event.preventDefault();\n            return;\n          }\n          if (Hotkeys.isSoftBreak(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertSoftBreak(editor);\n            return;\n          }\n          if (Hotkeys.isSplitBlock(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertBreak(editor);\n            return;\n          }\n          if (Hotkeys.isDeleteBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n        } else {\n          if (IS_CHROME || IS_WEBKIT) {\n            // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n            // an event when deleting backwards in a selected void inline node\n            if (selection && (Hotkeys.isDeleteBackward(nativeEvent) || Hotkeys.isDeleteForward(nativeEvent)) && Range.isCollapsed(selection)) {\n              var currentNode = Node.parent(editor, selection.anchor.path);\n              if (Element$1.isElement(currentNode) && Editor.isVoid(editor, currentNode) && (Editor.isInline(editor, currentNode) || Editor.isBlock(editor, currentNode))) {\n                event.preventDefault();\n                Editor.deleteBackward(editor, {\n                  unit: 'block'\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }, [readOnly, editor, attributes.onKeyDown]),\n    onPaste: useCallback(event => {\n      if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onPaste)) {\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to React's `onPaste` here instead.\n        // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n        // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n        // COMPAT: Safari InputEvents generated by pasting won't include\n        // application/x-slate-fragment items, so use the\n        // ClipboardEvent here. (2023/03/15)\n        if (!HAS_BEFORE_INPUT_SUPPORT || isPlainTextOnlyPaste(event.nativeEvent) || IS_WEBKIT) {\n          event.preventDefault();\n          ReactEditor.insertData(editor, event.clipboardData);\n        }\n      }\n    }, [readOnly, editor, attributes.onPaste])\n  }), /*#__PURE__*/React.createElement(Children, {\n    decorations: decorations,\n    node: editor,\n    renderElement: renderElement,\n    renderPlaceholder: renderPlaceholder,\n    renderLeaf: renderLeaf,\n    selection: editor.selection\n  })))));\n};\n/**\r\n * The default placeholder element\r\n */\n\nvar DefaultPlaceholder = _ref => {\n  var {\n    attributes,\n    children\n  } = _ref;\n  return /*#__PURE__*/(\n    // COMPAT: Artificially add a line-break to the end on the placeholder element\n    // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n    React.createElement(\"span\", Object.assign({}, attributes), children, IS_ANDROID && /*#__PURE__*/React.createElement(\"br\", null))\n  );\n};\n/**\r\n * A default memoized decorate function.\r\n */\n\nvar defaultDecorate = () => [];\n/**\r\n * A default implement to scroll dom range into view.\r\n */\n\nvar defaultScrollSelectionIntoView = (editor, domRange) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (domRange.getBoundingClientRect && (!editor.selection || editor.selection && Range.isCollapsed(editor.selection))) {\n    var leafEl = domRange.startContainer.parentElement;\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange);\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed'\n    }); // @ts-expect-error an unorthodox delete D:\n\n    delete leafEl.getBoundingClientRect;\n  }\n};\n/**\r\n * Check if an event is overrided by a handler.\r\n */\n\nvar isEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.isDefaultPrevented() || event.isPropagationStopped();\n};\n/**\r\n * Check if the event's target is an input element\r\n */\n\nvar isDOMEventTargetInput = event => {\n  return isDOMNode(event.target) && (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement);\n};\n/**\r\n * Check if a DOM event is overrided by a handler.\r\n */\n\nvar isDOMEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  } // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.defaultPrevented;\n};\n\n/**\r\n * A React context for sharing the `focused` state of the editor.\r\n */\n\nvar FocusedContext = /*#__PURE__*/createContext(false);\n/**\r\n * Get the current `focused` state of the editor.\r\n */\n\nvar useFocused = () => {\n  return useContext(FocusedContext);\n};\nfunction isError(error) {\n  return error instanceof Error;\n}\n/**\r\n * A React context for sharing the editor selector context in a way to control rerenders\r\n */\n\nvar SlateSelectorContext = /*#__PURE__*/createContext({});\nvar refEquality = (a, b) => a === b;\n/**\r\n * use redux style selectors to prevent rerendering on every keystroke.\r\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\r\n *\r\n * Example:\r\n * ```\r\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\r\n * ```\r\n */\n\nfunction useSlateSelector(selector) {\n  var equalityFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : refEquality;\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  var context = useContext(SlateSelectorContext);\n  if (!context) {\n    throw new Error(\"The `useSlateSelector` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    getSlate,\n    addEventListener\n  } = context;\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef(() => null);\n  var latestSelectedState = useRef(null);\n  var selectedState;\n  try {\n    if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {\n      selectedState = selector(getSlate());\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\".concat(latestSubscriptionCallbackError.current.stack, \"\\n\\n\");\n    }\n    throw err;\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(() => {\n    function checkForUpdates() {\n      try {\n        var newSelectedState = latestSelector.current(getSlate());\n        if (equalityFn(newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n        latestSelectedState.current = newSelectedState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        latestSubscriptionCallbackError.current = err;\n      }\n      forceRender();\n    }\n    var unsubscribe = addEventListener(checkForUpdates);\n    checkForUpdates();\n    return () => unsubscribe();\n  },\n  // don't rerender on equalityFn change since we want to be able to define it inline\n  [addEventListener, getSlate]);\n  return selectedState;\n}\n/**\r\n * Create selector context with editor updating on every editor change\r\n */\n\nfunction useSelectorContext(editor) {\n  var eventListeners = useRef([]).current;\n  var slateRef = useRef({\n    editor\n  }).current;\n  var onChange = useCallback(editor => {\n    slateRef.editor = editor;\n    eventListeners.forEach(listener => listener(editor));\n  }, [eventListeners, slateRef]);\n  var selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: callback => {\n        eventListeners.push(callback);\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1);\n        };\n      }\n    };\n  }, [eventListeners, slateRef]);\n  return {\n    selectorContext,\n    onChange\n  };\n}\nvar _excluded = [\"editor\", \"children\", \"onChange\", \"initialValue\"];\n/**\r\n * A wrapper around the provider to handle `onChange` events, because the editor\r\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\r\n */\n\nvar Slate = props => {\n  var {\n      editor,\n      children,\n      onChange,\n      initialValue\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  var unmountRef = useRef(false);\n  var [context, setContext] = React.useState(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\"[Slate] initialValue is invalid! Expected a list of elements but got: \".concat(Scrubber.stringify(initialValue)));\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\"[Slate] editor is invalid! You passed: \".concat(Scrubber.stringify(editor)));\n    }\n    editor.children = initialValue;\n    Object.assign(editor, rest);\n    return {\n      v: 0,\n      editor\n    };\n  });\n  var {\n    selectorContext,\n    onChange: handleSelectorChange\n  } = useSelectorContext(editor);\n  var onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children);\n    }\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor\n    }));\n    handleSelectorChange(editor);\n  }, [editor, handleSelectorChange, onChange]);\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange);\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {});\n      unmountRef.current = true;\n    };\n  }, [editor, onContextChange]);\n  var [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor));\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor));\n  }, [editor]);\n  useIsomorphicLayoutEffect(() => {\n    var fn = () => setIsFocused(ReactEditor.isFocused(editor));\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn);\n      document.addEventListener('focusout', fn);\n      return () => {\n        document.removeEventListener('focusin', fn);\n        document.removeEventListener('focusout', fn);\n      };\n    } else {\n      document.addEventListener('focus', fn, true);\n      document.addEventListener('blur', fn, true);\n      return () => {\n        document.removeEventListener('focus', fn, true);\n        document.removeEventListener('blur', fn, true);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SlateSelectorContext.Provider, {\n    value: selectorContext\n  }, /*#__PURE__*/React.createElement(SlateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EditorContext.Provider, {\n    value: context.editor\n  }, /*#__PURE__*/React.createElement(FocusedContext.Provider, {\n    value: isFocused\n  }, children))));\n};\n\n/**\r\n * Get the current editor object from the React context.\r\n * @deprecated Use useSlateStatic instead.\r\n */\n\nvar useEditor = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useEditor` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\n\n/**\r\n * Get the current slate selection.\r\n * Only triggers a rerender when the selection actually changes\r\n */\n\nvar useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual);\n};\nvar isSelectionEqual = (a, b) => {\n  if (!a && !b) return true;\n  if (!a || !b) return false;\n  return Range.equals(a, b);\n};\n\n/**\r\n * Utilities for single-line deletion\r\n */\n\nvar doRectsIntersect = (rect, compareRect) => {\n  var middle = (compareRect.top + compareRect.bottom) / 2;\n  return rect.top <= middle && rect.bottom >= middle;\n};\nvar areRangesSameLine = (editor, range1, range2) => {\n  var rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect();\n  var rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect();\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1);\n};\n/**\r\n * A helper utility that returns the end portion of a `Range`\r\n * which is located on a single line.\r\n *\r\n * @param {Editor} editor The editor object to compare against\r\n * @param {Range} parentRange The parent range to compare against\r\n * @returns {Range} A valid portion of the parentRange which is one a single line\r\n */\n\nvar findCurrentLineRange = (editor, parentRange) => {\n  var parentRangeBoundary = Editor.range(editor, Range.end(parentRange));\n  var positions = Array.from(Editor.positions(editor, {\n    at: parentRange\n  }));\n  var left = 0;\n  var right = positions.length;\n  var middle = Math.floor(right / 2);\n  if (areRangesSameLine(editor, Editor.range(editor, positions[left]), parentRangeBoundary)) {\n    return Editor.range(editor, positions[left], parentRangeBoundary);\n  }\n  if (positions.length < 2) {\n    return Editor.range(editor, positions[positions.length - 1], parentRangeBoundary);\n  }\n  while (middle !== positions.length && middle !== left) {\n    if (areRangesSameLine(editor, Editor.range(editor, positions[middle]), parentRangeBoundary)) {\n      right = middle;\n    } else {\n      left = middle;\n    }\n    middle = Math.floor((left + right) / 2);\n  }\n  return Editor.range(editor, positions[right], parentRangeBoundary);\n};\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\n/**\r\n * `withReact` adds React and DOM specific behaviors to the editor.\r\n *\r\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\r\n * this plugin.\r\n *\r\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\r\n */\n\nvar withReact = function withReact(editor) {\n  var clipboardFormatKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x-slate-fragment';\n  var e = editor;\n  var {\n    apply,\n    onChange,\n    deleteBackward,\n    addMark,\n    removeMark\n  } = e; // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap());\n  e.addMark = (key, value) => {\n    var _EDITOR_TO_SCHEDULE_F, _EDITOR_TO_PENDING_DI;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(e)) === null || _EDITOR_TO_SCHEDULE_F === void 0 ? void 0 : _EDITOR_TO_SCHEDULE_F();\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI !== void 0 && _EDITOR_TO_PENDING_DI.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    addMark(key, value);\n  };\n  e.removeMark = key => {\n    var _EDITOR_TO_PENDING_DI2;\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI2 !== void 0 && _EDITOR_TO_PENDING_DI2.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    removeMark(key);\n  };\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit);\n    }\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      var parentBlockEntry = Editor.above(e, {\n        match: n => Element$1.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection\n      });\n      if (parentBlockEntry) {\n        var [, parentBlockPath] = parentBlockEntry;\n        var parentElementRange = Editor.range(e, parentBlockPath, e.selection.anchor);\n        var currentLineRange = findCurrentLineRange(e, parentElementRange);\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, {\n            at: currentLineRange\n          });\n        }\n      }\n    }\n  }; // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n\n  e.apply = op => {\n    var matches = [];\n    var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e);\n    if (pendingDiffs !== null && pendingDiffs !== void 0 && pendingDiffs.length) {\n      var transformed = pendingDiffs.map(textDiff => transformTextDiff(textDiff, op)).filter(Boolean);\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed);\n    }\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e);\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(e, transformPendingRange(e, pendingSelection, op));\n    }\n    var pendingAction = EDITOR_TO_PENDING_ACTION.get(e);\n    if (pendingAction !== null && pendingAction !== void 0 && pendingAction.at) {\n      var at = Point.isPoint(pendingAction === null || pendingAction === void 0 ? void 0 : pendingAction.at) ? transformPendingPoint(e, pendingAction.at, op) : transformPendingRange(e, pendingAction.at, op);\n      EDITOR_TO_PENDING_ACTION.set(e, at ? _objectSpread(_objectSpread({}, pendingAction), {}, {\n        at\n      }) : null);\n    }\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node':\n        {\n          matches.push(...getMatches(e, op.path));\n          break;\n        }\n      case 'set_selection':\n        {\n          var _EDITOR_TO_USER_SELEC;\n\n          // Selection was manually set, don't restore the user selection after the change.\n          (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(e)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n          EDITOR_TO_USER_SELECTION.delete(e);\n          break;\n        }\n      case 'insert_node':\n      case 'remove_node':\n        {\n          matches.push(...getMatches(e, Path.parent(op.path)));\n          break;\n        }\n      case 'merge_node':\n        {\n          var prevPath = Path.previous(op.path);\n          matches.push(...getMatches(e, prevPath));\n          break;\n        }\n      case 'move_node':\n        {\n          var commonPath = Path.common(Path.parent(op.path), Path.parent(op.newPath));\n          matches.push(...getMatches(e, commonPath));\n          break;\n        }\n    }\n    apply(op);\n    for (var [path, key] of matches) {\n      var [node] = Editor.node(e, path);\n      NODE_TO_KEY.set(node, key);\n    }\n  };\n  e.setFragmentData = data => {\n    var {\n      selection\n    } = e;\n    if (!selection) {\n      return;\n    }\n    var [start, end] = Range.edges(selection);\n    var startVoid = Editor.void(e, {\n      at: start.path\n    });\n    var endVoid = Editor.void(e, {\n      at: end.path\n    });\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return;\n    } // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n\n    var domRange = ReactEditor.toDOMRange(e, selection);\n    var contents = domRange.cloneContents();\n    var attach = contents.childNodes[0]; // Make sure attach is non-empty, since empty nodes will not get copied.\n\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node;\n      }\n    }); // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n\n    if (endVoid) {\n      var [voidNode] = endVoid;\n      var r = domRange.cloneRange();\n      var domNode = ReactEditor.toDOMNode(e, voidNode);\n      r.setEndAfter(domNode);\n      contents = r.cloneContents();\n    } // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]');\n    } // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(zw => {\n      var isNewline = zw.getAttribute('data-slate-zero-width') === 'n';\n      zw.textContent = isNewline ? '\\n' : '';\n    }); // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n\n    if (isDOMText(attach)) {\n      var span = attach.ownerDocument.createElement('span'); // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n\n      span.style.whiteSpace = 'pre';\n      span.appendChild(attach);\n      contents.appendChild(span);\n      attach = span;\n    }\n    var fragment = e.getFragment();\n    var string = JSON.stringify(fragment);\n    var encoded = window.btoa(encodeURIComponent(string));\n    attach.setAttribute('data-slate-fragment', encoded);\n    data.setData(\"application/\".concat(clipboardFormatKey), encoded); // Add the content to a <div> so that we can get its inner HTML.\n\n    var div = contents.ownerDocument.createElement('div');\n    div.appendChild(contents);\n    div.setAttribute('hidden', 'true');\n    contents.ownerDocument.body.appendChild(div);\n    data.setData('text/html', div.innerHTML);\n    data.setData('text/plain', getPlainText(div));\n    contents.ownerDocument.body.removeChild(div);\n    return data;\n  };\n  e.insertData = data => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data);\n    }\n  };\n  e.insertFragmentData = data => {\n    /**\r\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\r\n     */\n    var fragment = data.getData(\"application/\".concat(clipboardFormatKey)) || getSlateFragmentAttribute(data);\n    if (fragment) {\n      var decoded = decodeURIComponent(window.atob(fragment));\n      var parsed = JSON.parse(decoded);\n      e.insertFragment(parsed);\n      return true;\n    }\n    return false;\n  };\n  e.insertTextData = data => {\n    var text = data.getData('text/plain');\n    if (text) {\n      var lines = text.split(/\\r\\n|\\r|\\n/);\n      var split = false;\n      for (var line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, {\n            always: true\n          });\n        }\n        e.insertText(line);\n        split = true;\n      }\n      return true;\n    }\n    return false;\n  };\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    var maybeBatchUpdates = REACT_MAJOR_VERSION < 18 ? ReactDOM.unstable_batchedUpdates : callback => callback();\n    maybeBatchUpdates(() => {\n      var onContextChange = EDITOR_TO_ON_CHANGE.get(e);\n      if (onContextChange) {\n        onContextChange();\n      }\n      onChange(options);\n    });\n  };\n  return e;\n};\nvar getMatches = (e, path) => {\n  var matches = [];\n  for (var [n, p] of Editor.levels(e, {\n    at: path\n  })) {\n    var key = ReactEditor.findKey(e, n);\n    matches.push([p, key]);\n  }\n  return matches;\n};\nexport { DefaultElement, DefaultLeaf, DefaultPlaceholder, Editable, ReactEditor, Slate, useEditor, useFocused, useReadOnly, useSelected, useSlate, useSlateSelection, useSlateSelector, useSlateStatic, useSlateWithV, withReact };","map":{"version":3,"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","EditorContext","createContext","useSlateStatic","editor","useContext","Error","REACT_MAJOR_VERSION","parseInt","React","version","split","IS_IOS","navigator","window","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_WEBKIT","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_ANDROID_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","document","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","getTargetRanges","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","EDITOR_TO_PLACEHOLDER_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","EDITOR_TO_USER_SELECTION","EDITOR_TO_ON_CHANGE","EDITOR_TO_SCHEDULE_FLUSH","EDITOR_TO_PENDING_INSERTION_MARKS","EDITOR_TO_USER_MARKS","EDITOR_TO_PENDING_DIFFS","EDITOR_TO_PENDING_ACTION","EDITOR_TO_PENDING_SELECTION","EDITOR_TO_FORCE_RENDER","PLACEHOLDER_SYMBOL","Symbol","MARK_PLACEHOLDER_SYMBOL","DOMText","Text","getDefaultView","ownerDocument","defaultView","isDOMComment","isDOMNode","nodeType","isDOMElement","Node","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","event","clipboardData","getData","types","normalizeDOMPoint","domPoint","node","offset","childNodes","isLast","index","getEditableChildAndIndex","getEditableChild","textContent","hasShadowRoot","parent","parentNode","toString","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","text","nodeValue","childNode","Array","from","display","getComputedStyle","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","fragment","match","isTrackedMutation","mutation","batch","matches","ReactEditor","getWindow","contains","hasDOMNode","editable","parentMutation","find","_ref","addedNodes","removedNodes","_node","n","Key","constructor","id","concat","androidPendingDiffs","get","androidScheduleFlush","_EDITOR_TO_SCHEDULE_F","blur","el","toDOMNode","root","findDocumentOrShadowRoot","set","activeElement","deselect","selection","domSelection","getSelection","rangeCount","removeAllRanges","Transforms","getRootNode","Document","ShadowRoot","findEventRange","nativeEvent","clientX","x","clientY","y","toSlateNode","path","findPath","Element$1","isElement","Editor","isVoid","rect","getBoundingClientRect","isPrev","isInline","left","width","top","height","edge","point","before","after","_range","range","domRange","caretRangeFromPoint","position","caretPositionFromPoint","createRange","setStart","offsetNode","setEnd","toSlateRange","exactMatch","suppressThrow","findKey","isEditor","unshift","Scrubber","stringify","focus","preventScroll","options","arguments","undefined","editorEl","targetEl","parentElement","err","message","includes","closest","isContentEditable","hasEditableTarget","hasRange","anchor","hasPath","hasSelectableTarget","isTargetInsideNonReadonlyVoid","hasTarget","insertData","data","insertFragmentData","insertTextData","isComposing","isFocused","isReadOnly","slateNode","setFragmentData","originEvent","KEY_TO_ELEMENT","toDOMPoint","void","at","selector","texts","querySelectorAll","start","attr","trueLength","end","nextText","hasAttribute","_nextText$textContent","domText","startsWith","Math","min","max","toDOMRange","isBackward","Range","domAnchor","domFocus","isCollapsed","startNode","startOffset","endNode","endOffset","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","domEl","toSlatePoint","nearestNode","nearestOffset","textNode","_domNode$textContent","_domNode$textContent2","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removals","slice","forEach","textContext","removeChild","leafNodes","current","endsWith","_slateNode","_path","_offset","querySelector","startContainer","anchorOffset","focusNode","focusOffset","endContainer","collapsed","_anchorNode$textConte","isEnd","isStart","isExpanded","isForward","mode","unhangRange","voids","verifyDiffState","textDiff","diff","Text$1","isText","nextPath","Path","next","nextNode","applyStringDiff","diffs","_len","_key","reduce","longestCommonPrefixLength","str","another","charAt","longestCommonSuffixLength","normalizeStringDiff","targetText","removedText","prefixLength","suffixLength","normalized","mergeStringDiffs","a","b","overlap","applied","sliceEnd","targetRange","normalizePoint","leaf","parentBlock","above","isBlock","entry","isDescendant","normalizeRange","transformPendingPoint","op","pendingDiffs","equals","Point","transform","affinity","_anchor","_transformed","transformed","type","transformPendingRange","transformTextDiff","newPath","RESOLVE_DELAY","FLUSH_DELAY","debug","isDataTransfer","name","createAndroidInputManager","scheduleOnDOMSelectionChange","onDOMSelectionChange","flushing","compositionEndTimeoutId","flushTimeoutId","actionTimeoutId","idCounter","insertPositionHint","applyPendingSelection","pendingSelection","delete","select","performAction","action","isPoint","_targetRange","run","flush","clearTimeout","hasPendingDiffs","hasPendingAction","setTimeout","selectionRef","rangeRef","marks","scheduleSelectionChange","_EDITOR_TO_PENDING_DI","_EDITOR_TO_PENDING_DI2","pendingMarks","insertText","deleteFragment","filter","_ref2","cancel","unref","userMarks","onChange","handleCompositionEnd","_event","handleCompositionStart","updatePlaceholderVisibility","forceHide","placeholderElement","style","removeProperty","storeDiff","_EDITOR_TO_PENDING_DI3","idx","findIndex","change","push","merged","splice","_objectSpread$3","scheduleAction","handleDOMBeforeInput","inputType","nativeTargetRange","_targetRange2","canStoreDiff","_start","_end","edges","_leaf","relevantPendingDiffs","handleUserSelect","targetNode","deleteForward","_nativeTargetRange","nativeCollapsed","deleteBackward","unit","insertSoftBreak","insertBreak","_text","replace","parts","line","_start2","_end2","_diff","hintPosition","search","diffPosition","scheduleFlush","_EDITOR_TO_PENDING_DI4","hasPendingChanges","isFlushing","pathChanged","parentPathChanged","handleInput","handleKeyDown","_","handleDomMutations","mutations","some","_EDITOR_TO_FORCE_REND","useIsMounted","isMountedRef","useRef","useEffect","useIsomorphicLayoutEffect","useLayoutEffect","useMutationObserver","callback","mutationObserver","useState","MutationObserver","takeRecords","observe","disconnect","MUTATION_OBSERVER_CONFIG$1","subtree","childList","characterData","useAndroidInputManager","_excluded$3","isMounted","inputManager","_objectSpread$2","shallowCompare","obj1","obj2","every","hasOwnProperty","isDecorationFlagsEqual","other","rangeOwnProps","_excluded$2","otherOwnProps","_excluded2$1","isElementDecorationsEqual","list","isTextDecorationsEqual","String","props","parentPath","isMarkPlaceholder","ZeroWidthString","string","children","isLineBreak","TextString","isTrailing","ref","getTextContent","initialText","textWithTrailing","MemoizedText$1","memo","forwardRef","attributes","assign","disconnectPlaceholderResizeObserver","placeholderResizeObserver","releaseObserver","clearTimeoutRef","timeoutRef","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","placeholderRef","showPlaceholder","setShowPlaceholder","showPlaceholderTimeoutRef","callbackPlaceholderRef","useCallback","placeholderEl","_leaf$onPlaceholderRe","onPlaceholderResize","ResizeObserver$1","ResizeObserver","_leaf$onPlaceholderRe2","leafIsPlaceholder","placeholderProps","placeholder","pointerEvents","maxWidth","opacity","userSelect","textDecoration","WebkitUserModify","contentEditable","Fragment","MemoizedLeaf","prev","decorations","leaves","callbackRef","span","MemoizedText","Element","element","renderElement","p","DefaultElement","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","color","outline","MemoizedElement","DecorateContext","useDecorate","SelectedContext","useSelected","decorate","isLeafBlock","sel","intersection","ds","dec","d","Provider","ReadOnlyContext","SlateContext","useSlate","context","useSlateWithV","useTrackUserInput","receivedUserInput","animationFrameIdRef","onUserInput","cancelAnimationFrame","requestAnimationFrame","TRIPLE_CLICK","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isHotkey","isApple","isWindows","Hotkeys","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","createRestoreDomManager","bufferedMutations","clear","registerMutations","trackedMutations","restoreDOM","reverse","insertBefore","nextSibling","MUTATION_OBSERVER_CONFIG","characterDataOldValue","RestoreDOMComponent","Component","manager","_this$mutationObserve","componentDidMount","getSnapshotBeforeUpdate","pendingMutations","_this$mutationObserve2","_this$manager","_this$mutationObserve3","_this$manager2","componentDidUpdate","_this$manager3","componentWillUnmount","_this$mutationObserve4","render","contextType","RestoreDOM","Children","Editable","defaultRenderPlaceholder","DefaultPlaceholder","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","scrollSelectionIntoView","defaultScrollSelectionIntoView","userStyle","as","disableDefaultStyles","_excluded$1","setIsComposing","deferredOperations","placeholderHeight","setPlaceholderHeight","forceRender","useReducer","s","state","useMemo","isDraggingInternally","isUpdatingSelection","latestElement","hasMarkPlaceholder","androidInputManagerRef","throttle","androidInputManager","anchorNodeSelectable","focusNodeSelectable","debounce","_androidInputManagerR","setDomSelection","forceChange","hasDomSelection","editorElement","hasDomSelectionInEditor","slateRange","_anchorNode$parentEle","newDomRange","collapseToEnd","setBaseAndExtent","ensureSelection","_androidInputManagerR2","timeoutId","animationFrameId","ensureDomSelection","e","isDOMEventHandled","_EDITOR_TO_USER_SELEC","isCompositionChange","native","_node$parentElement","_window$getComputedSt","_lastText$textContent","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","whiteSpace","block","preventDefault","toRestore","removeEventListener","addEventListener","placeHolderResizeHandler","_placeholderEl$getBou","rest","_excluded2","loose","unset","fromEntries","map","mark","_objectSpread$1","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","wordWrap","minHeight","onBeforeInput","isEventHandled","_text2","onInput","onBlur","relatedTarget","onClick","detail","blockPath","_block$","startVoid","endVoid","onCompositionEnd","_androidInputManagerR3","placeholderMarks","onCompositionUpdate","onCompositionStart","_androidInputManagerR4","inline","inlinePath","setSelection","onCopy","isDOMEventTargetInput","onCut","onDragOver","onDragStart","voidMatch","onDrop","draggedRange","onDragEnd","onFocus","onKeyDown","_androidInputManagerR5","isRTL","maybeHistoryEditor","_maybeHistoryEditor","move","collapse","currentNode","onPaste","leafEl","bind","scrollIntoView","scrollMode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","HTMLInputElement","HTMLTextAreaElement","defaultPrevented","FocusedContext","useFocused","isError","error","SlateSelectorContext","refEquality","useSlateSelector","equalityFn","getSlate","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","stack","checkForUpdates","newSelectedState","unsubscribe","useSelectorContext","eventListeners","slateRef","listener","selectorContext","Slate","initialValue","_excluded","unmountRef","setContext","isNodeList","v","handleSelectorChange","onContextChange","prevContext","setIsFocused","fn","useEditor","useSlateSelection","isSelectionEqual","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","right","floor","withReact","clipboardFormatKey","apply","addMark","removeMark","parentBlockEntry","parentBlockPath","parentElementRange","currentLineRange","Boolean","pendingAction","_objectSpread","getMatches","prevPath","previous","commonPath","common","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","appendChild","getFragment","JSON","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","splitNodes","always","maybeBatchUpdates","ReactDOM","unstable_batchedUpdates","levels"],"sources":["/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-slate-static.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/environment.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/weak-maps.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/dom.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/key.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/plugin/react-editor.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/diff-text.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-is-mounted.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-mutation-observer.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/range-list.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/string.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/leaf.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/text.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/element.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-decorate.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-selected.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-children.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-read-only.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-slate.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-track-user-input.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/constants.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/hotkeys.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/restore-dom/restore-dom.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/editable.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-focused.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-slate-selector.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/components/slate.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-editor.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/hooks/use-slate-selection.tsx","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/utils/lines.ts","/Users/ailuoku6/web_project/flxEditor/node_modules/.pnpm/slate-react@0.97.2_react-dom@18.2.0_react@18.2.0_slate@0.94.1/node_modules/slate-react/src/plugin/with-react.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_WEBKIT =\n  typeof navigator !== 'undefined' &&\n  /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_ANDROID_CHROME_LEGACY =\n  IS_ANDROID &&\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { Ancestor, Editor, Node, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<\n  Editor,\n  HTMLElement\n> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<\n  Editor,\n  RangeRef | null\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<\n  Editor,\n  () => void\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<\n  Editor,\n  TextDiff[]\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<\n  Editor,\n  Action | null\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<\n  Editor,\n  Range | null\n> = new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\nexport const MARK_PLACEHOLDER_SYMBOL = (Symbol(\n  'mark-placeholder'\n) as unknown) as string\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines whether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (\n  dataTransfer: DataTransfer,\n  clipboardFormatKey = 'x-slate-fragment'\n): DataTransfer => {\n  if (!dataTransfer.getData(`application/${clipboardFormatKey}`)) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData(`application/${clipboardFormatKey}`, fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\nimport { TextDiff } from '../utils/diff-text'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  DOMText,\n  hasShadowRoot,\n  isDOMElement,\n  isDOMNode,\n  isDOMSelection,\n  normalizeDOMPoint,\n} from '../utils/dom'\nimport { IS_ANDROID, IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n}\n\nexport interface ReactEditorInterface {\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs: (editor: Editor) => TextDiff[] | undefined\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush: (editor: Editor) => void\n\n  /**\n   * Blur the editor.\n   */\n  blur: (editor: ReactEditor) => void\n\n  /**\n   * Deselect the editor.\n   */\n  deselect: (editor: ReactEditor) => void\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n  findDocumentOrShadowRoot: (editor: ReactEditor) => Document | ShadowRoot\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n  findEventRange: (editor: ReactEditor, event: any) => Range\n\n  /**\n   * Find a key for a Slate node.\n   */\n  findKey: (editor: ReactEditor, node: Node) => Key\n\n  /**\n   * Find the path of Slate node.\n   */\n  findPath: (editor: ReactEditor, node: Node) => Path\n\n  /**\n   * Focus the editor.\n   */\n  focus: (editor: ReactEditor) => void\n\n  /**\n   * Return the host window of the current editor.\n   */\n  getWindow: (editor: ReactEditor) => Window\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n  hasDOMNode: (\n    editor: ReactEditor,\n    target: DOMNode,\n    options?: { editable?: boolean }\n  ) => boolean\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   *\n   */\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n  insertData: (editor: ReactEditor, data: DataTransfer) => void\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n  insertFragmentData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n  insertTextData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n  isComposing: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is focused.\n   */\n  isFocused: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n  isReadOnly: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n  setFragmentData: (\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n  toDOMNode: (editor: ReactEditor, node: Node) => HTMLElement\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n  toDOMPoint: (editor: ReactEditor, point: Point) => DOMPoint\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n  toDOMRange: (editor: ReactEditor, range: Range) => DOMRange\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n  toSlateNode: (editor: ReactEditor, domNode: DOMNode) => Node\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Point | null : Point\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Range | null : Range\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n\n  androidScheduleFlush: editor => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  blur: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  deselect: editor => {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  findDocumentOrShadowRoot: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  findKey: (editor, node) => {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  findPath: (editor, node) => {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  focus: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  getWindow: editor => {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  hasDOMNode: (editor, target, options = {}) => {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  hasEditableTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true }),\n\n  hasRange: (editor, range) => {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  hasSelectableTarget: (editor, target) =>\n    ReactEditor.hasEditableTarget(editor, target) ||\n    ReactEditor.isTargetInsideNonReadonlyVoid(editor, target),\n\n  hasTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) && ReactEditor.hasDOMNode(editor, target),\n\n  insertData: (editor, data) => {\n    editor.insertData(data)\n  },\n\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n\n  insertTextData: (editor, data) => editor.insertTextData(data),\n\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      ReactEditor.hasTarget(editor, target) &&\n      ReactEditor.toSlateNode(editor, target)\n    return Element.isElement(slateNode) && Editor.isVoid(editor, slateNode)\n  },\n\n  setFragmentData: (editor, data, originEvent) =>\n    editor.setFragmentData(data, originEvent),\n\n  toDOMNode: (editor, node) => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  toDOMPoint: (editor, point) => {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  toDOMRange: (editor, range) => {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  toSlateNode: (editor, domNode) => {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point => {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range => {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot(anchorNode)) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n    if (\n      'getAttribute' in focusNode &&\n      (focusNode as HTMLElement).getAttribute('contenteditable') === 'false' &&\n      (focusNode as HTMLElement).getAttribute('data-slate-void') !== 'true'\n    ) {\n      focusNode = anchorNode\n      focusOffset = anchorNode.textContent?.length || 0\n    }\n\n    let anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow,\n    })\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    /**\n     * suppose we have this document:\n     *\n     * { type: 'paragraph',\n     *   children: [\n     *     { text: 'foo ' },\n     *     { text: 'bar' },\n     *     { text: ' baz' }\n     *   ]\n     * }\n     *\n     * a double click on \"bar\" on chrome will create this range:\n     *\n     * anchor -> [0,1] offset 0\n     * focus  -> [0,1] offset 3\n     *\n     * while on firefox will create this range:\n     *\n     * anchor -> [0,0] offset 4\n     * focus  -> [0,2] offset 0\n     *\n     * let's try to fix it...\n     */\n\n    if (IS_FIREFOX && !isCollapsed && anchorNode !== focusNode) {\n      const isEnd = Editor.isEnd(editor, anchor!, anchor.path)\n      const isStart = Editor.isStart(editor, focus!, focus.path)\n\n      if (isEnd) {\n        const after = Editor.after(editor, anchor as Point)\n        // Editor.after() might return undefined\n        anchor = (after || anchor!) as T extends true ? Point | null : Point\n      }\n\n      if (isStart) {\n        const before = Editor.before(editor, focus as Point)\n        focus = (before || focus!) as T extends true ? Point | null : Point\n      }\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n}\n","import {\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Text,\n  Element,\n} from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nexport function applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n","import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        const [start, end] = Range.edges(targetRange)\n        const leaf = Node.leaf(editor, start.path)\n\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            targetRange = { anchor: end, focus: end }\n          }\n        }\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      const [start, end] = Range.edges(targetRange)\n      const [leaf, path] = Editor.leaf(editor, start.path)\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            storeDiff(start.path, diff)\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n","import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\nconst isDecorationFlagsEqual = (range: Range, other: Range) => {\n  const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n  const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n  return (\n    range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] &&\n    shallowCompare(rangeOwnProps, otherOwnProps)\n  )\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isElementDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isTextDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    // compare only offsets because paths doesn't matter for text\n    if (\n      range.anchor.offset !== other.anchor.offset ||\n      range.focus.offset !== other.focus.offset ||\n      !isDecorationFlagsEqual(range, other)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { Element, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT } from '../utils/environment'\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = leaf[PLACEHOLDER_SYMBOL]\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, 300)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import React, { useCallback, useRef } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n  return (\n    <span data-slate-node=\"text\" ref={callbackRef}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { Editor, Element as SlateElement, Node, Range } from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\nimport Text from './text'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Ancestor, Descendant, Editor, Element, Range } from 'slate'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport { useDecorate } from './use-decorate'\nimport { SelectedContext } from './use-selected'\nimport { useSlateStatic } from './use-slate-static'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","export const TRIPLE_CLICK = 3\n","import { isHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isHotkey(generic)\n  const isApple = apple && isHotkey(apple)\n  const isWindows = windows && isHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n","import React, { Component, ComponentType, ContextType, RefObject } from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n","import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const defaultRenderPlaceholder = useCallback(\n    (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n    []\n  )\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = defaultRenderPlaceholder,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style: userStyle = {},\n    as: Component = 'div',\n    disableDefaultStyles = false,\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n  const [placeholderHeight, setPlaceholderHeight] = useState<\n    number | undefined\n  >()\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  /**\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n   *\n   * It is defined as a reference to simplify hook dependencies and clarify that\n   * it needs to be initialized.\n   */\n  const androidInputManagerRef = useRef<\n    AndroidInputManager | null | undefined\n  >()\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useMemo(\n    () =>\n      throttle(() => {\n        const androidInputManager = androidInputManagerRef.current\n        if (\n          (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n          (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n          !state.isDraggingInternally\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, anchorNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, focusNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: true,\n            })\n\n            if (range) {\n              if (\n                !ReactEditor.isComposing(editor) &&\n                !androidInputManager?.hasPendingChanges() &&\n                !androidInputManager?.isFlushing()\n              ) {\n                Transforms.select(editor, range)\n              } else {\n                androidInputManager?.handleUserSelect(range)\n              }\n            }\n          }\n\n          // Deselect the editor if the dom selection is not selectable in readonly mode\n          if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n            Transforms.deselect(editor)\n          }\n        }\n      }, 100),\n    [editor, readOnly, state]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManagerRef.current?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          const { anchorNode } = domSelection\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n          domSelection.collapseToEnd()\n        } else if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    const newDomRange = setDomSelection()\n    const ensureSelection =\n      androidInputManagerRef.current?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          const el = ReactEditor.toDOMNode(editor, editor)\n          el.focus()\n        }\n\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      onUserInput()\n\n      if (\n        !readOnly &&\n        ReactEditor.hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManagerRef.current) {\n          return androidInputManagerRef.current.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [\n      editor,\n      onDOMSelectionChange,\n      onUserInput,\n      propsOnDOMBeforeInput,\n      readOnly,\n      scheduleOnDOMSelectionChange,\n    ]\n  )\n\n  const callbackRef = useCallback(\n    node => {\n      if (node == null) {\n        onDOMSelectionChange.cancel()\n        scheduleOnDOMSelectionChange.cancel()\n\n        EDITOR_TO_ELEMENT.delete(editor)\n        NODE_TO_ELEMENT.delete(editor)\n\n        if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n        }\n      } else {\n        // Attach a native DOM event handler for `beforeinput` events, because React's\n        // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n        // real `beforeinput` events sadly... (2019/11/04)\n        // https://github.com/facebook/react/issues/11211\n        if (HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          node.addEventListener('beforeinput', onDOMBeforeInput)\n        }\n      }\n\n      ref.current = node\n    },\n    [\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n      editor,\n      onDOMBeforeInput,\n    ]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  const showPlaceholder =\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n\n  const placeHolderResizeHandler = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      if (placeholderEl && showPlaceholder) {\n        setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n      } else {\n        setPlaceholderHeight(undefined)\n      }\n    },\n    [showPlaceholder]\n  )\n\n  if (showPlaceholder) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={callbackRef}\n            style={{\n              ...(disableDefaultStyles\n                ? {}\n                : {\n                    // Allow positioning relative to the editable element.\n                    position: 'relative',\n                    // Preserve adjacent whitespace and new lines.\n                    whiteSpace: 'pre-wrap',\n                    // Allow words to break if they are too long.\n                    wordWrap: 'break-word',\n                    // Make the minimum height that of the placeholder.\n                    ...(placeholderHeight\n                      ? { minHeight: placeholderHeight }\n                      : {}),\n                  }),\n              // Allow for passed-in styles to override anything.\n              ...userStyle,\n            }}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  ReactEditor.hasSelectableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [attributes.onBeforeInput, editor, readOnly]\n            )}\n            onInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                if (isEventHandled(event, attributes.onInput)) {\n                  return\n                }\n\n                if (androidInputManagerRef.current) {\n                  androidInputManagerRef.current.handleInput()\n                  return\n                }\n\n                // Flush native operations, as native events will have propogated\n                // and we can correctly compare DOM text values in components\n                // to stop rendering, so that browser functions like autocorrect\n                // and spellcheck work as expected.\n                for (const op of deferredOperations.current) {\n                  op()\n                }\n                deferredOperations.current = []\n              },\n              [attributes.onInput]\n            )}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_WEBKIT) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [\n                readOnly,\n                state.isUpdatingSelection,\n                state.latestElement,\n                editor,\n                attributes.onBlur,\n              ]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (\n                      !(Element.isElement(node) && Editor.isBlock(editor, node))\n                    ) {\n                      const block = Editor.above(editor, {\n                        match: n =>\n                          Element.isElement(n) && Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [editor, attributes.onClick, readOnly]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    setIsComposing(false)\n                    IS_COMPOSING.set(editor, false)\n                  }\n\n                  androidInputManagerRef.current?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_WEBKIT &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(\n                      editor\n                    )\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd, editor]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate, editor]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  androidInputManagerRef.current?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                      return\n                    }\n                    const inline = Editor.above(editor, {\n                      match: n =>\n                        Element.isElement(n) && Editor.isInline(editor, n),\n                      mode: 'highest',\n                    })\n                    if (inline) {\n                      const [, inlinePath] = inline\n                      if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                        const point = Editor.after(editor, inlinePath)!\n                        Transforms.setSelection(editor, {\n                          anchor: point,\n                          focus: point,\n                        })\n                      }\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionStart, editor]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy, editor]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver, editor]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    (Element.isElement(node) && Editor.isVoid(editor, node)) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, editor, attributes.onDragStart, state]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, editor, attributes.onDrop, state]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  ReactEditor.hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, state, attributes, editor]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, state, editor, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target)\n                ) {\n                  androidInputManagerRef.current?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'start' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'end' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_WEBKIT) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  // COMPAT: Safari InputEvents generated by pasting won't include\n                  // application/x-slate-fragment items, so use the\n                  // ClipboardEvent here. (2023/03/15)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent) ||\n                    IS_WEBKIT\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback(\n    (editor: Editor) => {\n      slateRef.editor = editor\n      eventListeners.forEach((listener: EditorChangeHandler) =>\n        listener(editor)\n      )\n    },\n    [eventListeners, slateRef]\n  )\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { Descendant, Editor, Node, Scrubber } from 'slate'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, initialValue, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = initialValue\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = useSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor,\n    }))\n    handleSelectorChange(editor)\n  }, [editor, handleSelectorChange, onChange])\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Editor, Range } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Element.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData(`application/${clipboardFormatKey}`, encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData(`application/${clipboardFormatKey}`) ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange(options)\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}