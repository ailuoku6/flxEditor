{"ast":null,"code":"var _jsxFileName = \"/Users/ailuoku6/web_project/flxEditor/packages/flx_editor/src/container/Editor/components/ToolbarBtn/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Editor } from \"slate\";\nimport { useSlate } from \"slate-react\";\nimport { Button } from \"antd\";\n\n// const LIST_TYPES = [\"numbered-list\", \"bulleted-list\"];\n// const TEXT_ALIGN_TYPES = [\"left\", \"center\", \"right\", \"justify\"];\n\n// const toggleBlock = (editor: ReactEditor, format: string) => {\n//   const isActive = isBlockActive(\n//     editor,\n//     format,\n//     TEXT_ALIGN_TYPES.includes(format) ? \"align\" : \"type\"\n//   );\n//   const isList = LIST_TYPES.includes(format);\n\n//   Transforms.unwrapNodes(editor, {\n//     match: (n) =>\n//       !Editor.isEditor(n) &&\n//       SlateElement.isElement(n) &&\n//       LIST_TYPES.includes(n.type) &&\n//       !TEXT_ALIGN_TYPES.includes(format),\n//     split: true,\n//   });\n//   let newProperties: Partial<SlateElement>;\n//   if (TEXT_ALIGN_TYPES.includes(format)) {\n//     newProperties = {\n//       align: isActive ? undefined : format,\n//     };\n//   } else {\n//     newProperties = {\n//       type: isActive ? \"paragraph\" : isList ? \"list-item\" : format,\n//     };\n//   }\n//   Transforms.setNodes<SlateElement>(editor, newProperties);\n\n//   if (!isActive && isList) {\n//     const block = { type: format, children: [] };\n//     Transforms.wrapNodes(editor, block);\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\n// const isBlockActive = (\n//   editor: ReactEditor,\n//   format: string,\n//   blockType = \"type\"\n// ) => {\n//   const { selection } = editor;\n//   if (!selection) return false;\n\n//   const [match] = Array.from(\n//     Editor.nodes(editor, {\n//       at: Editor.unhangRange(editor, selection),\n//       match: (n) =>\n//         !Editor.isEditor(n) &&\n//         SlateElement.isElement(n) &&\n//         n[blockType] === format,\n//     })\n//   );\n\n//   return !!match;\n// };\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\n// export const BlockButton = ({\n//   format,\n//   icon,\n// }: {\n//   format: string;\n//   icon: string;\n// }) => {\n//   const editor = useSlate();\n//   return (\n//     <Button\n//       active={isBlockActive(\n//         editor,\n//         format,\n//         TEXT_ALIGN_TYPES.includes(format) ? \"align\" : \"type\"\n//       )}\n//       onMouseDown={(event) => {\n//         event.preventDefault();\n//         toggleBlock(editor, format);\n//       }}\n//     >\n//       <Icon>{icon}</Icon>\n//     </Button>\n//   );\n// };\n\nexport const MarkButton = ({\n  format,\n  icon\n}) => {\n  _s();\n  const editor = useSlate();\n  return /*#__PURE__*/_jsxDEV(Button, {\n    type: isMarkActive(editor, format) ? \"primary\" : \"default\"\n    // active={isMarkActive(editor, format)}\n    ,\n    onMouseDown: event => {\n      event.preventDefault();\n      toggleMark(editor, format);\n    },\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(MarkButton, \"YMFVEh3YGumTkrWAgpqmxHJ20Oc=\", false, function () {\n  return [useSlate];\n});\n_c = MarkButton;\nvar _c;\n$RefreshReg$(_c, \"MarkButton\");","map":{"version":3,"names":["React","Editor","useSlate","Button","jsxDEV","_jsxDEV","toggleMark","editor","format","isActive","isMarkActive","removeMark","addMark","marks","MarkButton","icon","_s","type","onMouseDown","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ailuoku6/web_project/flxEditor/packages/flx_editor/src/container/Editor/components/ToolbarBtn/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element as SlateElement, Editor, Transforms, BaseEditor } from \"slate\";\n\nimport { ReactEditor, useSlate } from \"slate-react\";\n\nimport { Button } from \"antd\";\n\n// const LIST_TYPES = [\"numbered-list\", \"bulleted-list\"];\n// const TEXT_ALIGN_TYPES = [\"left\", \"center\", \"right\", \"justify\"];\n\n// const toggleBlock = (editor: ReactEditor, format: string) => {\n//   const isActive = isBlockActive(\n//     editor,\n//     format,\n//     TEXT_ALIGN_TYPES.includes(format) ? \"align\" : \"type\"\n//   );\n//   const isList = LIST_TYPES.includes(format);\n\n//   Transforms.unwrapNodes(editor, {\n//     match: (n) =>\n//       !Editor.isEditor(n) &&\n//       SlateElement.isElement(n) &&\n//       LIST_TYPES.includes(n.type) &&\n//       !TEXT_ALIGN_TYPES.includes(format),\n//     split: true,\n//   });\n//   let newProperties: Partial<SlateElement>;\n//   if (TEXT_ALIGN_TYPES.includes(format)) {\n//     newProperties = {\n//       align: isActive ? undefined : format,\n//     };\n//   } else {\n//     newProperties = {\n//       type: isActive ? \"paragraph\" : isList ? \"list-item\" : format,\n//     };\n//   }\n//   Transforms.setNodes<SlateElement>(editor, newProperties);\n\n//   if (!isActive && isList) {\n//     const block = { type: format, children: [] };\n//     Transforms.wrapNodes(editor, block);\n//   }\n// };\n\nconst toggleMark = (editor: ReactEditor, format: string) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\n// const isBlockActive = (\n//   editor: ReactEditor,\n//   format: string,\n//   blockType = \"type\"\n// ) => {\n//   const { selection } = editor;\n//   if (!selection) return false;\n\n//   const [match] = Array.from(\n//     Editor.nodes(editor, {\n//       at: Editor.unhangRange(editor, selection),\n//       match: (n) =>\n//         !Editor.isEditor(n) &&\n//         SlateElement.isElement(n) &&\n//         n[blockType] === format,\n//     })\n//   );\n\n//   return !!match;\n// };\n\nconst isMarkActive = (editor: ReactEditor, format: string) => {\n  const marks = Editor.marks(editor) as Record<string, boolean>;\n  return marks ? marks[format] === true : false;\n};\n\n// export const BlockButton = ({\n//   format,\n//   icon,\n// }: {\n//   format: string;\n//   icon: string;\n// }) => {\n//   const editor = useSlate();\n//   return (\n//     <Button\n//       active={isBlockActive(\n//         editor,\n//         format,\n//         TEXT_ALIGN_TYPES.includes(format) ? \"align\" : \"type\"\n//       )}\n//       onMouseDown={(event) => {\n//         event.preventDefault();\n//         toggleBlock(editor, format);\n//       }}\n//     >\n//       <Icon>{icon}</Icon>\n//     </Button>\n//   );\n// };\n\nexport const MarkButton = ({\n  format,\n  icon,\n}: {\n  format: string;\n  icon: string;\n}) => {\n  const editor = useSlate();\n  return (\n    <Button\n      type={isMarkActive(editor as ReactEditor, format) ? \"primary\" : \"default\"}\n      // active={isMarkActive(editor, format)}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggleMark(editor as ReactEditor, format);\n      }}\n    >\n      {icon}\n    </Button>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAkCC,MAAM,QAAgC,OAAO;AAE/E,SAAsBC,QAAQ,QAAQ,aAAa;AAEnD,SAASC,MAAM,QAAQ,MAAM;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,UAAU,GAAGA,CAACC,MAAmB,EAAEC,MAAc,KAAK;EAC1D,MAAMC,QAAQ,GAAGC,YAAY,CAACH,MAAM,EAAEC,MAAM,CAAC;EAE7C,IAAIC,QAAQ,EAAE;IACZR,MAAM,CAACU,UAAU,CAACJ,MAAM,EAAEC,MAAM,CAAC;EACnC,CAAC,MAAM;IACLP,MAAM,CAACW,OAAO,CAACL,MAAM,EAAEC,MAAM,EAAE,IAAI,CAAC;EACtC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAME,YAAY,GAAGA,CAACH,MAAmB,EAAEC,MAAc,KAAK;EAC5D,MAAMK,KAAK,GAAGZ,MAAM,CAACY,KAAK,CAACN,MAAM,CAA4B;EAC7D,OAAOM,KAAK,GAAGA,KAAK,CAACL,MAAM,CAAC,KAAK,IAAI,GAAG,KAAK;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,UAAU,GAAGA,CAAC;EACzBN,MAAM;EACNO;AAIF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMT,MAAM,GAAGL,QAAQ,CAAC,CAAC;EACzB,oBACEG,OAAA,CAACF,MAAM;IACLc,IAAI,EAAEP,YAAY,CAACH,MAAM,EAAiBC,MAAM,CAAC,GAAG,SAAS,GAAG;IAChE;IAAA;IACAU,WAAW,EAAGC,KAAK,IAAK;MACtBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBd,UAAU,CAACC,MAAM,EAAiBC,MAAM,CAAC;IAC3C,CAAE;IAAAa,QAAA,EAEDN;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb,CAAC;AAACT,EAAA,CApBWF,UAAU;EAAA,QAONZ,QAAQ;AAAA;AAAAwB,EAAA,GAPZZ,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}